{"version":3,"sources":["firebase-config.js","images/card1.png","images/card2.png","images/card3.png","images2/logo.png","images2/heading.png","pages/Home.js","pages/CourseCard.js","pages/Testing.js","pages/Testing2.js","pages/Testing3.js","pages/Testing4.js","pages/Testing5.js","pages/Testing6.js","pages/Testing7.js","JobPortal.js","images/etherjs.jpg","images/webdev.jpg","images/reactjs.jpg","images/solidity.jpg","images/blockchain.jpg","images/dsa.jpg","images/logo.png","HomePage.js","NewHome.js","pages/Course1.js","Courses.js","DevRel.js","App.js","reportWebVitals.js","index.js","pages/Home.module.css"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","result","name","user","displayName","email","profilePic","photoURL","console","log","localStorage","setItem","window","location","reload","catch","error","Home","string","class","style","backgroundColor","width","margin","padding","fontFamily","fontSize","fontWeight","color","textAlign","options","strings","autoStart","loop","CourseCard","link","courseId","notes","moduleId","courseName","useNotification","useState","show","setShow","usersCollectionRef","collection","handleClose","buttonClass","getItem","JSON","parse","length","includes","buttonText","Card","background","border","borderRadius","borderColor","Body","height","src","title","frameBorder","allow","allowFullScreen","Text","onClick","a","userDoc","doc","newFields","updateDoc","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","href","target","Footer","variant","open","Testing","setLink","setCourseId","setModuleId","setNotes","videoLink","basicsofprogramming","repeatCount","dispatch","dispatch1","handleNewNotification1","type","message","icon","position","dispatch2","abi","Card2","Array","from","_","i","className","isModuleComplete","basicprogramming","ethereum","request","method","accounts","flag","index","ethers","providers","Web3Provider","signer","getSigner","params","chainId","rpcUrls","chainName","nativeCurrency","symbol","decimals","blockExplorerUrls","Contract","safeMint","transaction","err","alert","blockchain","solidity","basicsofblockchain","dsa","reactjs","htmlcssjs","etherjs","JobPortal","cardStyles","useEffect","axios","get","res","jobsData","data","jobs","uniqueCrawlerCompanyNames","Set","filteredJobs","filter","job","crawler_company","has","add","setJobs","map","avatar_url","Img","apply_link","HomePage","setLoginButtonColor","setLoginButtonText","setLoginImage","setLoginButtonImage","id","heading","alt","card2","to","card3","webdev","backgroundIimage","boxShadow","Row","marginLeft","Col","card1","Button","Course1","showNFT","setShowNFT","Alert","cursor","textDecoration","contractAddress","claimCertificate","Courses","App","loginButtonText","loginImage","loginButtonImage","account","setAccount","accountShow","setAccountShow","setBalance","courseCollectionRef","AOS","init","disable","startEvent","initClassName","animatedClassName","useClassNames","disableMutationObserver","debounceDelay","throttleDelay","offset","delay","duration","easing","once","mirror","anchorPlacement","requestAccount","substring","getBalance","balanc","utils","formatEther","contract","BigNumber","numberOfCourses","courses","toNumber","obj","numberOfModules","modules","j","modulesCompleted","isComplete","push","stringify","getDocs","coursedata","docs","userdata","addDoc","connectverse","path","element","DevRel","Testing2","Testing3","Testing4","Testing5","Testing6","Testing7","NewHome","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","serverUrl","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.97cda6cb.chunk.js","sourcesContent":["\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"@firebase/firestore\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBhQhfW-cWT1_P0qkXt2nrBbfuljQ-aPfM\",\r\n  authDomain: \"connectverse-b708e.firebaseapp.com\",\r\n  projectId: \"connectverse-b708e\",\r\n  storageBucket: \"connectverse-b708e.appspot.com\",\r\n  messagingSenderId: \"205443753466\",\r\n  appId: \"1:205443753466:web:50cf6702f460686c5bb043\",\r\n  measurementId: \"G-Y7HJ58BK7G\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getFirestore(app);\r\n\r\nexport const auth = getAuth(app);\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () => {\r\n  signInWithPopup(auth, provider)\r\n    .then((result) => {\r\n      const name = result.user.displayName;\r\n      const email = result.user.email;\r\n      const profilePic = result.user.photoURL;\r\n      console.log(profilePic);\r\n      console.log(name);\r\n      localStorage.setItem(\"name\", name);\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"profilePic\", profilePic);\r\n      window.location.reload(true)\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n};","export default __webpack_public_path__ + \"static/media/card1.5e593f24.png\";","export default __webpack_public_path__ + \"static/media/card2.651e7032.png\";","export default __webpack_public_path__ + \"static/media/card3.53b83028.png\";","export default __webpack_public_path__ + \"static/media/logo.83ac363e.png\";","export default __webpack_public_path__ + \"static/media/heading.9113b1f9.png\";","import React from 'react';\r\nimport Typewriter from 'typewriter-effect';\r\nimport './Home.module.css'; // Import the CSS module\r\nimport heading from '../images2/heading.png';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css'; \r\n\r\nconst Home = ({ string }) => {\r\n  const typewriterStyles = {\r\n    fontFamily: 'Arial, sans-serif',\r\n    fontSize: '19px',\r\n    fontWeight: 'bold',\r\n    color: 'rgb(248, 221, 251)',\r\n    padding: '20px',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  return (\r\n    <div class=\"container\" style={{backgroundColor:'inherit',width:'19em',margin:'0',padding:'0'}}>\r\n      <div class=\"typewriter-container\">\r\n       \r\n        <br />\r\n        <div style={typewriterStyles}>\r\n          <Typewriter\r\n            options={{\r\n              strings: string,\r\n              autoStart: true,\r\n              loop: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React,{useState,useEffect} from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport { ethers } from 'ethers';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Modal';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { db } from \"../firebase-config\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport './CourseCard.css'\r\n\r\nfunction CourseCard({link,notes,courseId,moduleId,courseName}) {\r\n    const dispatch = useNotification();\r\n    \r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const handleNewNotification1 = (\r\n       \r\n      ) => {\r\n          dispatch({\r\n              type:\"success\",\r\n              message: 'Added to MyList',\r\n              title: 'success  ',\r\n              icon:\"chevronRightX2\",\r\n              position:  'topL',\r\n          });\r\n      };\r\n\r\n    //   const isComplete=JSON.parse(localStorage.getItem(\"iscompletedbasicofblockchain\"))\r\n\r\n    const [markAsCompleteText,setMarkAsCompleteText]=useState('Mark as Complete')\r\n    const [markAsCompleteColor,setMarkAsCompleteColor]=useState('danger')\r\n    const [show, setShow] = useState(false);\r\n    const usersCollectionRef = collection(db, \"usercourse\");\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n \r\n // Replace this with the specific module ID you want to check\r\n\r\nconst buttonClass = localStorage.getItem(`C${courseId}M${moduleId}`)=='true' ||  JSON.parse(localStorage.getItem(\"userinfo\"))[`${courseName}`].length>moduleId && JSON.parse(localStorage.getItem(\"userinfo\"))[`${courseName}`].includes(`s${moduleId}`)\r\n    ? 'cbutton3'\r\n    : 'cbutton2'\r\n\r\n\r\n  const buttonText =localStorage.getItem(`C${courseId}M${moduleId}`)=='true' || JSON.parse(localStorage.getItem(\"userinfo\"))[`${courseName}`].length>moduleId && JSON.parse(localStorage.getItem(\"userinfo\"))[`${courseName}`].includes(`s${moduleId}`)\r\n    ? 'Completed'\r\n    : 'Mark as Complete'\r\n  \r\n\r\n//    useEffect(() => {\r\n    \r\n//     const isModuleComplete = async () => {\r\n//         const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n//         const signer = provider.getSigner();\r\n//         const contractAddress = \"0x031fe39C0F6c6E032dd2154d3688671a1ba3a4DC\";\r\n//         const accounts = await window.ethereum.request({\r\n//           method: \"eth_requestAccounts\",\r\n//         });\r\n//         const contract = new ethers.Contract(contractAddress, abi, signer);\r\n        \r\n       \r\n        \r\n//         contract.modulesCompleted(accounts[0], courseId, moduleId).then((data)=>{\r\n//             // alert(data);\r\n//             // console.log(data);\r\n//             setMarkAsCompleteText('Completed');\r\n//             setMarkAsCompleteColor('success')\r\n//         }).catch((err)=>{\r\n//             alert(err);\r\n//             console.log(err);\r\n//         })\r\n//            // Assuming data is a string or something that can be alerted\r\n        \r\n//       }\r\n// isModuleComplete()\r\n\r\n//    }, [])\r\n   \r\n    \r\n\r\n    let abi= [\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"modules\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"addCourse\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"modules\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"addModules\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"courseId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"recipient\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"claimCertificate\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"module\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"completeModule\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"createCertificate\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_email\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_phono\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"register\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"courseId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"moduleId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"linkString\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"setLink\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"certificate\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"email\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getCourseById\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"courseId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"moduleId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getLink\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"courseId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"moduleId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"isModuleComplete\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isRegistered\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"link\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"modulesCompleted\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"numberOfCourses\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"numberOfModules\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"phono\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n\r\n    \r\n    const modulesCompleted = async () => {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const signer = provider.getSigner();\r\n        const contractAddress = \"0xed003f0709Ec34c4e9B1DF990B928Fd029eD1681\";\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const contract = new ethers.Contract(contractAddress, abi, signer);\r\n        \r\n       \r\n        \r\n        contract.modulesCompleted(accounts[0], courseId, moduleId).then((data)=>{\r\n            alert(data);\r\n            console.log(data);\r\n            setMarkAsCompleteText('Completed');\r\n            setMarkAsCompleteColor('success')\r\n        }).catch((err)=>{\r\n            alert(err);\r\n            console.log(err);\r\n        })\r\n           // Assuming data is a string or something that can be alerted\r\n        \r\n      }\r\n  \r\n     \r\n  return (\r\n    <div>\r\n\r\n<Card style={{background:'black', border:'purple 2px solid',borderRadius: '55px',borderColor:'linear-gradient(to right, #0000ff 0%, #ff00ff 100%)'}}>\r\n      <Card.Body style={{backgroundColor:'black', borderColor:'purple'}}>\r\n        {/* YouTube video embed */}\r\n        <iframe style={{backgroundColor:'purple'}}\r\n          width=\"100%\"\r\n          height=\"350\"\r\n          src={`https://www.youtube.com/embed/${link}`}\r\n          title=\"YouTube Video\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        ></iframe>\r\n        <Card.Text>\r\n            <br></br>\r\n            <div class=\"buttons\">\r\n        <button  class=\"cbutton0\">Notes</button>\r\n        &nbsp; &nbsp;\r\n        <button class=\"cbutton1\">Practice</button>\r\n        &nbsp; &nbsp;\r\n        <button  class={buttonClass} onClick={async()=>{\r\n             localStorage.setItem(\"courseId\", courseId);\r\n             localStorage.setItem(\"moduleId\", moduleId);\r\n             localStorage.setItem(`C${courseId}M${moduleId}`,'true')\r\n\r\n             try{\r\n                const userDoc = doc(usersCollectionRef,localStorage.getItem(\"userId\"));\r\n            \r\n                const courseName1=`${courseName}`\r\n             const newFields = { [courseName]: [...JSON.parse(localStorage.getItem('userinfo'))[`${courseName}`],`s${moduleId}`] };\r\n             await updateDoc(userDoc, newFields);\r\n             window.location.reload(true)\r\n            \r\n            \r\n            }\r\n             catch(e){\r\n                console.log(e)\r\n             }\r\n             \r\n            \r\n              \r\n    }}\r\n >{buttonText}</button>\r\n </div>\r\n\r\n <br></br>\r\n <br></br>\r\n {/* <button onClick={modulesCompleted}>refresh</button> */}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n    <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Wallet not connected</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         Make sure that you have <a href=\"https://metamask.io/download/\" target=\"_blank\">wallet</a> installed on your browser\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n            window.open(\"https://metamask.io/download/\", '_blank');\r\n          }}>Install Wallet</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CourseCard","import React,{useState} from 'react'\r\nimport CourseCard from './CourseCard';\r\nimport Card2 from '../images/card1.png'\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { ethers } from 'ethers';\r\nimport './Testing.css'\r\nfunction Testing() {\r\n    const [link,setLink]=useState('mxfLCRemCUg')\r\n    const [courseId,setCourseId]=useState(0)\r\n    const [moduleId,setModuleId]=useState(0)\r\n    const [notes,setNotes]=useState(0)\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const videoLink=JSON.parse(localStorage.getItem('courseinfo')).basicsofprogramming\r\n    // const repeatCount = localStorage.getItem('user') ?parseInt(JSON.parse(localStorage.getItem(\"user\"))[courseId].numberOfModules) :videoLink.length;\r\n    const repeatCount = videoLink.length\r\n\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n\r\n    const dispatch0 = useNotification();\r\n\r\n    const handleNewNotification0 = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please Sign in to continue',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const dispatch = useNotification();\r\n\r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n\r\n    const dispatch1 = useNotification();\r\n\r\n    const handleNewNotification1 = (\r\n       \r\n    ) => {\r\n        dispatch1({\r\n            type:\"warning\",\r\n            message: 'Please complete the course to claim your NFT Certificate',\r\n            title: 'Course not completed',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n            \r\n        });\r\n    };\r\n    const dispatch2 = useNotification();\r\n    const handleNewNotification2 = (\r\n       \r\n        ) => {\r\n            dispatch2({\r\n                type:\"success\",\r\n                message: 'You have claimed your NFT Certificate ! You can view it on OpenSea.',\r\n                title: 'Congratulations',\r\n                icon:\"chevronRightX2\",\r\n                position:  'bottomR',\r\n                \r\n            });\r\n        };\r\n    \r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n  return (\r\n    <div> \r\n        <div >\r\n        \r\n        {localStorage.getItem('name')? <div class=\"container\">\r\n        <div class=\"right\">\r\n        <strong>\r\n      Module &nbsp;{moduleId+1}\r\n      </strong>\r\n    <CourseCard link={link} notes={notes} courseId={courseId} moduleId={moduleId} courseName=\"basicprogramming\" />\r\n     \r\n      \r\n    </div>\r\n    <br></br>\r\n    <div class=\"left\">\r\n        &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;\r\n        <strong>\r\n            <img style={{width:'5em'}} src={Card2}></img>\r\n            <br></br>\r\n            <br></br>\r\n     Introduction to Programming with C++\r\n     </strong>\r\n     <hr></hr>\r\n\r\n    {Array.from({ length: repeatCount }, (_, i) => (\r\n        <div key={i}>\r\n          <div className=\"fruits-divst\" onClick={async() => {\r\n            setCourseId(courseId);\r\n            setModuleId(i);\r\n\r\n           \r\n                setLink(videoLink[i])\r\n             \r\n             \r\n            setNotes('notes');\r\n          }}>\r\n            \r\n            <l style={{ color: 'violet' }} className={JSON.parse(localStorage.getItem(\"user\")) && JSON.parse(localStorage.getItem(\"user\"))[courseId].isModuleComplete[`${i}`]==true ||localStorage.getItem(`C${courseId}M${i}`)=='true' || JSON.parse(localStorage.getItem(\"userinfo\")).basicprogramming.length>i && JSON.parse(localStorage.getItem(\"userinfo\")).basicprogramming.includes(`s${i}`) ? 'fas fa-check-circle checked-icon' : 'far fa-circle unchecked-icon'}></l>\r\n            <strong>\r\n              &nbsp;\r\n              Module &nbsp; {i+1}\r\n              <br></br>\r\n              <l style={{ color: 'violet', fontSize: '17px' }}>{i+1}/11</l> <l style={{ color: 'grey', fontSize: '15px' }}>Video </l>\r\n            </strong>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      ))}\r\n\r\n      <hr></hr>\r\n      <button type=\"button\" class={localStorage.getItem(`s1completed`) && localStorage.getItem(`s1completed`)=='true' ?`btn btn-success`: `btn btn-danger`}     onClick={async()=>{\r\n        \r\n\r\n        if(typeof window.ethereum == 'undefined') {\r\n           handleNewNotification()\r\n        }\r\n\r\n\r\n        \r\n        if(localStorage.getItem(`s1completed`) && localStorage.getItem(`s1completed`)=='true')\r\n        {\r\n            const accounts = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n              });\r\n            window.open(`https://testnets.opensea.io/${accounts[0]}`, '_blank');\r\n        }\r\n        else\r\n        {\r\n            let flag=0;\r\n            for (let index = 0; index < videoLink.length; index++) {\r\n                \r\n               if(!(JSON.parse(localStorage.getItem('userinfo')).basicprogramming.includes(`s${index}`)))\r\n               {\r\n                flag=flag+1;\r\n                \r\n               }\r\n            }\r\n            if(flag==0)\r\n            {\r\n                const accounts = await window.ethereum.request({\r\n                    method: \"eth_requestAccounts\",\r\n                  });\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n             \r\n            \r\n                const signer = provider.getSigner();\r\n            await window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [{\r\n                    chainId: \"0x13881\",\r\n                    rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\r\n                    chainName: \"Mumbai\",\r\n                    nativeCurrency: {\r\n                        name: \"MATIC\",\r\n                        symbol: \"MATIC\",\r\n                        decimals: 18\r\n                    },\r\n                    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n                }]\r\n            })\r\n           \r\n            \r\n            \r\n            const contractAddress = \"0xe9381c5B2302983f1FaBE46F3406c855DDcc4F3b\";\r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n                signer\r\n            )\r\n          \r\n            contract.safeMint(\"https://ipfs.moralis.io:2053/ipfs/QmeNGV7N9AgSUaGM3tKyCBee23TzAGvpgAwHEMCAKWKDYP/media/0\")\r\n            .then((transaction) => {\r\n            \r\n            handleNewNotification2()\r\n            localStorage.setItem(`s1completed`,'true')\r\n            window.location.reload(true)\r\n            })\r\n      \r\n            .catch((err) => {\r\n           alert(err)\r\n            handleNewNotification1()\r\n           \r\n            \r\n            });\r\n            \r\n            }\r\n\r\n            else{\r\n                handleNewNotification1()\r\n            }\r\n            }\r\n        \r\n        \r\n        }}\r\n        >{localStorage.getItem(`s1completed`) && localStorage.getItem(`s1completed`)=='true'?'View Your Certificate':'Claim Your NFT Certificate'}</button>\r\n\r\n    </div>\r\n  \r\n  </div>\r\n  :handleNewNotification0()}\r\n\r\n\r\n   \r\n  \r\n  </div>\r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Testing","import React,{useState} from 'react'\r\nimport CourseCard from './CourseCard';\r\nimport Card2 from '../images/card1.png'\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { ethers } from 'ethers';\r\nimport './Testing.css'\r\nfunction Testing() {\r\n    const [link,setLink]=useState('g6ICkgwyoaQ')\r\n    const [courseId,setCourseId]=useState(1)\r\n    const [moduleId,setModuleId]=useState(0)\r\n    const [notes,setNotes]=useState(0)\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const videoLink=JSON.parse(localStorage.getItem('courseinfo')).blockchain\r\n    // const repeatCount = localStorage.getItem('user') ?parseInt(JSON.parse(localStorage.getItem(\"user\"))[courseId].numberOfModules) :videoLink.length;\r\n    const repeatCount = videoLink.length\r\n\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n\r\n    const dispatch0 = useNotification();\r\n\r\n    const handleNewNotification0 = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please Sign in to continue',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const dispatch = useNotification();\r\n\r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n\r\n    const dispatch1 = useNotification();\r\n\r\n    const handleNewNotification1 = (\r\n       \r\n    ) => {\r\n        dispatch1({\r\n            type:\"warning\",\r\n            message: 'Please complete the course to claim your NFT Certificate',\r\n            title: 'Course not completed',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n            \r\n        });\r\n    };\r\n    const dispatch2 = useNotification();\r\n    const handleNewNotification2 = (\r\n       \r\n        ) => {\r\n            dispatch2({\r\n                type:\"success\",\r\n                message: 'You have claimed your NFT Certificate ! You can view it on OpenSea.',\r\n                title: 'Congratulations',\r\n                icon:\"chevronRightX2\",\r\n                position:  'bottomR',\r\n                \r\n            });\r\n        };\r\n    \r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n  return (\r\n    <div style={{color:'white'}}> \r\n   \r\n\r\n\r\n        <div >\r\n        \r\n        {localStorage.getItem('name')? <div class=\"container\">\r\n        <div class=\"right\">\r\n        <strong>\r\n      Module &nbsp;{moduleId+1}\r\n      </strong>\r\n    <CourseCard link={link} notes={notes} courseId={courseId} moduleId={moduleId} courseName=\"solidity\" />\r\n     \r\n      \r\n    </div>\r\n    <br></br>\r\n    <div class=\"left\">\r\n        &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;\r\n        <strong>\r\n            <img style={{width:'5em'}} src={Card2}></img>\r\n            <br></br>\r\n            <br></br>\r\n     Blockchain Backend: Solidity Programming\r\n     </strong>\r\n     <hr></hr>\r\n\r\n    {Array.from({ length: repeatCount }, (_, i) => (\r\n        <div key={i}>\r\n          <div className=\"fruits-divst\" onClick={async() => {\r\n            setCourseId(courseId);\r\n            setModuleId(i);\r\n\r\n           \r\n                setLink(videoLink[i])\r\n             \r\n             \r\n            setNotes('notes');\r\n          }}>\r\n            \r\n            <l style={{ color: 'violet' }} className={JSON.parse(localStorage.getItem(\"user\")) && JSON.parse(localStorage.getItem(\"user\"))[courseId].isModuleComplete[`${i}`]==true ||localStorage.getItem(`C${courseId}M${i}`)=='true' || JSON.parse(localStorage.getItem(\"userinfo\")).solidity.length>i && JSON.parse(localStorage.getItem(\"userinfo\")).solidity.includes(`s${i}`) ? 'fas fa-check-circle checked-icon' : 'far fa-circle unchecked-icon'}></l>\r\n            <strong>\r\n              &nbsp;\r\n              Module &nbsp; {i+1}\r\n              <br></br>\r\n              <l style={{ color: 'violet', fontSize: '17px' }}>{i+1}/15</l> <l style={{ color: 'grey', fontSize: '15px' }}>Videos </l>\r\n            </strong>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      ))}\r\n\r\n      <hr></hr>\r\n      {/* <button type=\"button\" class={localStorage.getItem(`s2completed`) && localStorage.getItem(`s2completed`)=='true' ?`btn btn-success`: `btn btn-danger`}     onClick={async()=>{\r\n        \r\n\r\n        if(typeof window.ethereum == 'undefined') {\r\n           handleNewNotification()\r\n        }\r\n\r\n\r\n        \r\n        if(localStorage.getItem(`s2completed`) && localStorage.getItem(`s2completed`)=='true')\r\n        {\r\n            const accounts = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n              });\r\n            window.open(`https://testnets.opensea.io/${accounts[0]}`, '_blank');\r\n        }\r\n        else\r\n        {\r\n            let flag=0;\r\n            for (let index = 0; index < videoLink.length; index++) {\r\n                \r\n               if(!(JSON.parse(localStorage.getItem('userinfo')).solidity.includes(`s${index}`)))\r\n               {\r\n                flag=flag+1;\r\n                \r\n               }\r\n            }\r\n            if(flag==0)\r\n            {\r\n                const accounts = await window.ethereum.request({\r\n                    method: \"eth_requestAccounts\",\r\n                  });\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n             \r\n            \r\n                const signer = provider.getSigner();\r\n            await window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [{\r\n                    chainId: \"0x13881\",\r\n                    rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\r\n                    chainName: \"Mumbai\",\r\n                    nativeCurrency: {\r\n                        name: \"MATIC\",\r\n                        symbol: \"MATIC\",\r\n                        decimals: 18\r\n                    },\r\n                    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n                }]\r\n            })\r\n           \r\n            \r\n            \r\n            const contractAddress = \"0xe9381c5B2302983f1FaBE46F3406c855DDcc4F3b\";\r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n                signer\r\n            )\r\n          \r\n            contract.safeMint(\"https://ipfs.moralis.io:2053/ipfs/QmNqNdD6f9a64pSzPR6t4agqN3XKC4cixaJehZoYAZTydy/media/0\")\r\n            .then((transaction) => {\r\n            \r\n            handleNewNotification2()\r\n            localStorage.setItem(`s2completed`,'true')\r\n            window.location.reload(true)\r\n            })\r\n      \r\n            .catch((err) => {\r\n           alert(err)\r\n            handleNewNotification1()\r\n           \r\n            \r\n            });\r\n            \r\n            }\r\n\r\n            else{\r\n                handleNewNotification1()\r\n            }\r\n            }\r\n        \r\n        \r\n        }}\r\n        >{localStorage.getItem(`s2completed`) && localStorage.getItem(`s2completed`)=='true'?'View Your Certificate':'Claim Your NFT Certificate'}</button> */}\r\n\r\n    </div>\r\n  \r\n  </div>\r\n  :handleNewNotification0()}\r\n\r\n\r\n   \r\n  \r\n  </div>\r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Testing","import React,{useState} from 'react'\r\nimport CourseCard from './CourseCard';\r\nimport Card2 from '../images/card1.png'\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { ethers } from 'ethers';\r\nimport './Testing.css'\r\nfunction Testing() {\r\n    const [link,setLink]=useState('LeWIC4XBcKY')\r\n    const [courseId,setCourseId]=useState(2)\r\n    const [moduleId,setModuleId]=useState(0)\r\n    const [notes,setNotes]=useState(0)\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const videoLink=JSON.parse(localStorage.getItem('courseinfo')).basicsofblockchain\r\n    // const repeatCount = localStorage.getItem('user') ?parseInt(JSON.parse(localStorage.getItem(\"user\"))[courseId].numberOfModules) :videoLink.length;\r\n    const repeatCount = videoLink.length\r\n\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n\r\n    const dispatch0 = useNotification();\r\n\r\n    const handleNewNotification0 = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please Sign in to continue',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const dispatch = useNotification();\r\n\r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n\r\n    const dispatch1 = useNotification();\r\n\r\n    const handleNewNotification1 = (\r\n       \r\n    ) => {\r\n        dispatch1({\r\n            type:\"warning\",\r\n            message: 'Please complete the course to claim your NFT Certificate',\r\n            title: 'Course not completed',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n            \r\n        });\r\n    };\r\n    const dispatch2 = useNotification();\r\n    const handleNewNotification2 = (\r\n       \r\n        ) => {\r\n            dispatch2({\r\n                type:\"success\",\r\n                message: 'You have claimed your NFT Certificate ! You can view it on OpenSea.',\r\n                title: 'Congratulations',\r\n                icon:\"chevronRightX2\",\r\n                position:  'bottomR',\r\n                \r\n            });\r\n        };\r\n    \r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n  return (\r\n    <div style={{color:'white'}}> \r\n    \r\n        <div >\r\n        \r\n        {localStorage.getItem('name')? <div class=\"container\">\r\n        <div class=\"right\">\r\n        <strong>\r\n      Module &nbsp;{moduleId+1}\r\n      </strong>\r\n    <CourseCard link={link} notes={notes} courseId={courseId} moduleId={moduleId} courseName=\"basicsofblockchain\" />\r\n     \r\n      \r\n    </div>\r\n    <br></br>\r\n    <div class=\"left\">\r\n        &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;\r\n        <strong>\r\n            <img style={{width:'5em'}} src={Card2}></img>\r\n            <br></br>\r\n            <br></br>\r\n     Basics of Blockchain\r\n     </strong>\r\n     <hr></hr>\r\n\r\n    {Array.from({ length: repeatCount }, (_, i) => (\r\n        <div key={i}>\r\n          <div className=\"fruits-divst\" onClick={async() => {\r\n            setCourseId(courseId);\r\n            setModuleId(i);\r\n\r\n           \r\n                setLink(videoLink[i])\r\n             \r\n             \r\n            setNotes('notes');\r\n          }}>\r\n            \r\n            <l style={{ color: 'violet' }} className={JSON.parse(localStorage.getItem(\"user\")) && JSON.parse(localStorage.getItem(\"user\"))[courseId].isModuleComplete[`${i}`]==true ||localStorage.getItem(`C${courseId}M${i}`)=='true' || JSON.parse(localStorage.getItem(\"userinfo\")).basicsofblockchain.length>i && JSON.parse(localStorage.getItem(\"userinfo\")).basicsofblockchain.includes(`s${i}`) ? 'fas fa-check-circle checked-icon' : 'far fa-circle unchecked-icon'}></l>\r\n            <strong>\r\n              &nbsp;\r\n              Module &nbsp; {i+1}\r\n              <br></br>\r\n              <l style={{ color: 'violet', fontSize: '17px' }}>{i+1}/16</l> <l style={{ color: 'grey', fontSize: '15px' }}>Video </l>\r\n            </strong>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      ))}\r\n\r\n      <hr></hr>\r\n      <button type=\"button\" class={localStorage.getItem(`s3completed`) && localStorage.getItem(`s3completed`)=='true' ?`btn btn-success`: `btn btn-danger`}     onClick={async()=>{\r\n        \r\n\r\n        if(typeof window.ethereum == 'undefined') {\r\n           handleNewNotification()\r\n        }\r\n\r\n\r\n        \r\n        if(localStorage.getItem(`s3completed`) && localStorage.getItem(`s3completed`)=='true')\r\n        {\r\n            const accounts = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n              });\r\n            window.open(`https://testnets.opensea.io/${accounts[0]}`, '_blank');\r\n        }\r\n        else\r\n        {\r\n            let flag=0;\r\n            for (let index = 0; index < videoLink.length; index++) {\r\n                \r\n               if(!(JSON.parse(localStorage.getItem('userinfo')).basicsofblockchain.includes(`s${index}`)))\r\n               {\r\n                flag=flag+1;\r\n                \r\n               }\r\n            }\r\n            if(flag==0)\r\n            {\r\n                const accounts = await window.ethereum.request({\r\n                    method: \"eth_requestAccounts\",\r\n                  });\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n             \r\n            \r\n                const signer = provider.getSigner();\r\n            await window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [{\r\n                    chainId: \"0x13881\",\r\n                    rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\r\n                    chainName: \"Mumbai\",\r\n                    nativeCurrency: {\r\n                        name: \"MATIC\",\r\n                        symbol: \"MATIC\",\r\n                        decimals: 18\r\n                    },\r\n                    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n                }]\r\n            })\r\n           \r\n            \r\n            \r\n            const contractAddress = \"0xe9381c5B2302983f1FaBE46F3406c855DDcc4F3b\";\r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n                signer\r\n            )\r\n          \r\n            contract.safeMint(\"https://ipfs.moralis.io:2053/ipfs/QmaooXYYy9GpD6rkTSpX1NKCCZp59HNHka46FTVz1y3XCQ/media/0\")\r\n            .then((transaction) => {\r\n            \r\n            handleNewNotification2()\r\n            localStorage.setItem(`s3completed`,'true')\r\n            window.location.reload(true)\r\n            })\r\n      \r\n            .catch((err) => {\r\n           alert(err)\r\n            handleNewNotification1()\r\n           \r\n            \r\n            });\r\n            \r\n            }\r\n\r\n            else{\r\n                handleNewNotification1()\r\n            }\r\n            }\r\n        \r\n        \r\n        }}\r\n        >{localStorage.getItem(`s3completed`) && localStorage.getItem(`s3completed`)=='true'?'View Your Certificate':'Claim Your NFT Certificate'}</button>\r\n\r\n    </div>\r\n  \r\n  </div>\r\n  :handleNewNotification0()}\r\n\r\n\r\n   \r\n  \r\n  </div>\r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Testing","import React,{useState} from 'react'\r\nimport CourseCard from './CourseCard';\r\nimport Card2 from '../images/card1.png'\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { ethers } from 'ethers';\r\nimport './Testing.css'\r\nfunction Testing() {\r\n    const [link,setLink]=useState('W8U_w2CIzDk')\r\n    const [courseId,setCourseId]=useState(3)\r\n    const [moduleId,setModuleId]=useState(0)\r\n    const [notes,setNotes]=useState(0)\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const videoLink=JSON.parse(localStorage.getItem('courseinfo')).dsa\r\n    // const repeatCount = localStorage.getItem('user') ?parseInt(JSON.parse(localStorage.getItem(\"user\"))[courseId].numberOfModules) :videoLink.length;\r\n    const repeatCount = videoLink.length\r\n\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n\r\n    const dispatch0 = useNotification();\r\n\r\n    const handleNewNotification0 = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please Sign in to continue',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const dispatch = useNotification();\r\n\r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n\r\n    const dispatch1 = useNotification();\r\n\r\n    const handleNewNotification1 = (\r\n       \r\n    ) => {\r\n        dispatch1({\r\n            type:\"warning\",\r\n            message: 'Please complete the course to claim your NFT Certificate',\r\n            title: 'Course not completed',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n            \r\n        });\r\n    };\r\n    const dispatch2 = useNotification();\r\n    const handleNewNotification2 = (\r\n       \r\n        ) => {\r\n            dispatch2({\r\n                type:\"success\",\r\n                message: 'You have claimed your NFT Certificate ! You can view it on OpenSea.',\r\n                title: 'Congratulations',\r\n                icon:\"chevronRightX2\",\r\n                position:  'bottomR',\r\n                \r\n            });\r\n        };\r\n    \r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n  return (\r\n    <div style={{color:'white'}}> \r\n    <h1>Coming Soon...</h1> \r\n        {/* <div >\r\n        \r\n        {localStorage.getItem('name')? <div class=\"container\">\r\n        <div class=\"right\">\r\n        <strong>\r\n      Module &nbsp;{moduleId+1}\r\n      </strong>\r\n    <CourseCard link={link} notes={notes} courseId={courseId} moduleId={moduleId} courseName=\"dsa\" />\r\n     \r\n      \r\n    </div>\r\n    <br></br>\r\n    <div class=\"left\">\r\n        &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;\r\n        <strong>\r\n            <img style={{width:'5em'}} src={Card2}></img>\r\n            <br></br>\r\n            <br></br>\r\n     Data Structures & Algorithms\r\n     </strong>\r\n\r\n     <hr></hr>\r\n\r\n    {Array.from({ length: repeatCount }, (_, i) => (\r\n        <div key={i}>\r\n          <div className=\"fruits-divst\" onClick={async() => {\r\n            setCourseId(courseId);\r\n            setModuleId(i);\r\n\r\n           \r\n                setLink(videoLink[i])\r\n             \r\n             \r\n            setNotes('notes');\r\n          }}>\r\n            \r\n            <l style={{ color: 'violet' }} className={JSON.parse(localStorage.getItem(\"user\")) && JSON.parse(localStorage.getItem(\"user\"))[courseId].isModuleComplete[`${i}`]==true ||localStorage.getItem(`C${courseId}M${i}`)=='true' || JSON.parse(localStorage.getItem(\"userinfo\")).dsa.length>i && JSON.parse(localStorage.getItem(\"userinfo\")).dsa.includes(`s${i}`) ? 'fas fa-check-circle checked-icon' : 'far fa-circle unchecked-icon'}></l>\r\n            <strong>\r\n              &nbsp;\r\n              Module &nbsp; {i+1}\r\n              <br></br>\r\n              <l style={{ color: 'violet', fontSize: '17px' }}>{i+1}/5</l> <l style={{ color: 'grey', fontSize: '15px' }}>Videos (12 mins)</l>\r\n            </strong>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      ))}\r\n\r\n      <hr></hr>\r\n      <button type=\"button\" class={localStorage.getItem(`s4completed`) && localStorage.getItem(`s4completed`)=='true' ?`btn btn-success`: `btn btn-danger`}     onClick={async()=>{\r\n        \r\n\r\n        if(typeof window.ethereum == 'undefined') {\r\n           handleNewNotification()\r\n        }\r\n\r\n\r\n        \r\n        if(localStorage.getItem(`s4completed`) && localStorage.getItem(`s4completed`)=='true')\r\n        {\r\n            const accounts = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n              });\r\n            window.open(`https://testnets.opensea.io/${accounts[0]}`, '_blank');\r\n        }\r\n        else\r\n        {\r\n            let flag=0;\r\n            for (let index = 0; index < videoLink.length; index++) {\r\n                \r\n               if(!(JSON.parse(localStorage.getItem('userinfo')).dsa.includes(`s${index}`)))\r\n               {\r\n                flag=flag+1;\r\n                \r\n               }\r\n            }\r\n            if(flag==0)\r\n            {\r\n                const accounts = await window.ethereum.request({\r\n                    method: \"eth_requestAccounts\",\r\n                  });\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n             \r\n            \r\n                const signer = provider.getSigner();\r\n            await window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [{\r\n                    chainId: \"0x13881\",\r\n                    rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\r\n                    chainName: \"Mumbai\",\r\n                    nativeCurrency: {\r\n                        name: \"MATIC\",\r\n                        symbol: \"MATIC\",\r\n                        decimals: 18\r\n                    },\r\n                    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n                }]\r\n            })\r\n           \r\n            \r\n            \r\n            const contractAddress = \"0xe9381c5B2302983f1FaBE46F3406c855DDcc4F3b\";\r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n                signer\r\n            )\r\n          \r\n            contract.safeMint(\"https://ipfs.moralis.io:2053/ipfs/Qmd8otHHgSueZJT2wyhwH2Z3KLLagWd795oqwmXsY2Ybnh/media/0\")\r\n            .then((transaction) => {\r\n            \r\n            handleNewNotification2()\r\n            localStorage.setItem(`s4completed`,'true')\r\n            window.location.reload(true)\r\n            })\r\n      \r\n            .catch((err) => {\r\n           alert(err)\r\n            handleNewNotification1()\r\n           \r\n            \r\n            });\r\n            \r\n            }\r\n\r\n            else{\r\n                handleNewNotification1()\r\n            }\r\n            }\r\n        \r\n        \r\n        }}\r\n        >{localStorage.getItem(`s4completed`) && localStorage.getItem(`s4completed`)=='true'?'View Your Certificate':'Claim Your NFT Certificate'}</button>\r\n\r\n    </div>\r\n  \r\n  </div>\r\n  :handleNewNotification0()}\r\n\r\n\r\n   \r\n  \r\n  </div> */}\r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Testing","import React,{useState} from 'react'\r\nimport CourseCard from './CourseCard';\r\nimport Card2 from '../images/card1.png'\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { ethers } from 'ethers';\r\nimport './Testing.css'\r\nfunction Testing() {\r\n    const [link,setLink]=useState('W8U_w2CIzDk')\r\n    const [courseId,setCourseId]=useState(4)\r\n    const [moduleId,setModuleId]=useState(0)\r\n    const [notes,setNotes]=useState(0)\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const videoLink=JSON.parse(localStorage.getItem('courseinfo')).reactjs\r\n    // const repeatCount = localStorage.getItem('user') ?parseInt(JSON.parse(localStorage.getItem(\"user\"))[courseId].numberOfModules) :videoLink.length;\r\n    const repeatCount = videoLink.length\r\n\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n\r\n    const dispatch0 = useNotification();\r\n\r\n    const handleNewNotification0 = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please Sign in to continue',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const dispatch = useNotification();\r\n\r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n\r\n    const dispatch1 = useNotification();\r\n\r\n    const handleNewNotification1 = (\r\n       \r\n    ) => {\r\n        dispatch1({\r\n            type:\"warning\",\r\n            message: 'Please complete the course to claim your NFT Certificate',\r\n            title: 'Course not completed',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n            \r\n        });\r\n    };\r\n    const dispatch2 = useNotification();\r\n    const handleNewNotification2 = (\r\n       \r\n        ) => {\r\n            dispatch2({\r\n                type:\"success\",\r\n                message: 'You have claimed your NFT Certificate ! You can view it on OpenSea.',\r\n                title: 'Congratulations',\r\n                icon:\"chevronRightX2\",\r\n                position:  'bottomR',\r\n                \r\n            });\r\n        };\r\n    \r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n  return (\r\n    <div> \r\n        {videoLink.length==1  && videoLink[0]==\"\"?<div style={{color:'white'}}><h1>Coming Soon...</h1></div>: <div >\r\n        \r\n        {localStorage.getItem('name')? <div class=\"container\">\r\n        <div class=\"right\">\r\n        <strong>\r\n      Module &nbsp;{moduleId+1}\r\n      </strong>\r\n    <CourseCard link={link} notes={notes} courseId={courseId} moduleId={moduleId} courseName=\"reactjs\" />\r\n     \r\n      \r\n    </div>\r\n    <br></br>\r\n    <div class=\"left\">\r\n        &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;\r\n        <strong>\r\n            <img style={{width:'5em'}} src={Card2}></img>\r\n            <br></br>\r\n            <br></br>\r\n     React JS: Mastery Series\r\n     </strong>\r\n     <hr></hr>\r\n\r\n    {Array.from({ length: repeatCount }, (_, i) => (\r\n        <div key={i}>\r\n          <div className=\"fruits-divst\" onClick={async() => {\r\n            setCourseId(courseId);\r\n            setModuleId(i);\r\n\r\n           \r\n                setLink(videoLink[i])\r\n             \r\n             \r\n            setNotes('notes');\r\n          }}>\r\n            \r\n            <l style={{ color: 'violet' }} className={JSON.parse(localStorage.getItem(\"user\")) && JSON.parse(localStorage.getItem(\"user\"))[courseId].isModuleComplete[`${i}`]==true ||localStorage.getItem(`C${courseId}M${i}`)=='true' || JSON.parse(localStorage.getItem(\"userinfo\")).reactjs.length>i && JSON.parse(localStorage.getItem(\"userinfo\")).reactjs.includes(`s${i}`) ? 'fas fa-check-circle checked-icon' : 'far fa-circle unchecked-icon'}></l>\r\n            <strong>\r\n              &nbsp;\r\n              Module &nbsp; {i+1}\r\n              <br></br>\r\n              <l style={{ color: 'violet', fontSize: '17px' }}>{i+1}/5</l> <l style={{ color: 'grey', fontSize: '15px' }}>Videos (12 mins)</l>\r\n            </strong>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      ))}\r\n\r\n      <hr></hr>\r\n      <button type=\"button\" class={localStorage.getItem(`s5completed`) && localStorage.getItem(`s5completed`)=='true' ?`btn btn-success`: `btn btn-danger`}     onClick={async()=>{\r\n        \r\n\r\n        if(typeof window.ethereum == 'undefined') {\r\n           handleNewNotification()\r\n        }\r\n\r\n\r\n        \r\n        if(localStorage.getItem(`s5completed`) && localStorage.getItem(`s5completed`)=='true')\r\n        {\r\n            const accounts = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n              });\r\n            window.open(`https://testnets.opensea.io/${accounts[0]}`, '_blank');\r\n        }\r\n        else\r\n        {\r\n            let flag=0;\r\n            for (let index = 0; index < videoLink.length; index++) {\r\n                \r\n               if(!(JSON.parse(localStorage.getItem('userinfo')).reactjs.includes(`s${index}`)))\r\n               {\r\n                flag=flag+1;\r\n                \r\n               }\r\n            }\r\n            if(flag==0)\r\n            {\r\n                const accounts = await window.ethereum.request({\r\n                    method: \"eth_requestAccounts\",\r\n                  });\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n             \r\n            \r\n                const signer = provider.getSigner();\r\n            await window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [{\r\n                    chainId: \"0x13881\",\r\n                    rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\r\n                    chainName: \"Mumbai\",\r\n                    nativeCurrency: {\r\n                        name: \"MATIC\",\r\n                        symbol: \"MATIC\",\r\n                        decimals: 18\r\n                    },\r\n                    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n                }]\r\n            })\r\n           \r\n            \r\n            \r\n            const contractAddress = \"0xe9381c5B2302983f1FaBE46F3406c855DDcc4F3b\";\r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n                signer\r\n            )\r\n          \r\n            contract.safeMint(\"https://ipfs.moralis.io:2053/ipfs/QmRWnmRdiKPP8wUk5aLuYugvMHvjtdtfukht1K1n4psJPj/media/0\")\r\n            .then((transaction) => {\r\n            \r\n            handleNewNotification2()\r\n            localStorage.setItem(`s5completed`,'true')\r\n            window.location.reload(true)\r\n            })\r\n      \r\n            .catch((err) => {\r\n           alert(err)\r\n            handleNewNotification1()\r\n           \r\n            \r\n            });\r\n            \r\n            }\r\n\r\n            else{\r\n                handleNewNotification1()\r\n            }\r\n            }\r\n        \r\n        \r\n        }}\r\n        >{localStorage.getItem(`s5completed`) && localStorage.getItem(`s5completed`)=='true'?'View Your Certificate':'Claim Your NFT Certificate'}</button>\r\n\r\n    </div>\r\n  \r\n  </div>\r\n  :handleNewNotification0()}\r\n\r\n\r\n   \r\n  \r\n  </div>}\r\n       \r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Testing","import React,{useState} from 'react'\r\nimport CourseCard from './CourseCard';\r\nimport Card2 from '../images/card1.png'\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { ethers } from 'ethers';\r\nimport './Testing.css'\r\nfunction Testing() {\r\n    const [link,setLink]=useState('W8U_w2CIzDk')\r\n    const [courseId,setCourseId]=useState(5)\r\n    const [moduleId,setModuleId]=useState(0)\r\n    const [notes,setNotes]=useState(0)\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const videoLink=JSON.parse(localStorage.getItem('courseinfo')).htmlcssjs\r\n    // const repeatCount = localStorage.getItem('user') ?parseInt(JSON.parse(localStorage.getItem(\"user\"))[courseId].numberOfModules) :videoLink.length;\r\n    const repeatCount = videoLink.length\r\n\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n\r\n    const dispatch0 = useNotification();\r\n\r\n    const handleNewNotification0 = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please Sign in to continue',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const dispatch = useNotification();\r\n\r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n\r\n    const dispatch1 = useNotification();\r\n\r\n    const handleNewNotification1 = (\r\n       \r\n    ) => {\r\n        dispatch1({\r\n            type:\"warning\",\r\n            message: 'Please complete the course to claim your NFT Certificate',\r\n            title: 'Course not completed',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n            \r\n        });\r\n    };\r\n    const dispatch2 = useNotification();\r\n    const handleNewNotification2 = (\r\n       \r\n        ) => {\r\n            dispatch2({\r\n                type:\"success\",\r\n                message: 'You have claimed your NFT Certificate ! You can view it on OpenSea.',\r\n                title: 'Congratulations',\r\n                icon:\"chevronRightX2\",\r\n                position:  'bottomR',\r\n                \r\n            });\r\n        };\r\n    \r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n  return (\r\n    <div style={{color:'white'}}> \r\n    <h1>Coming Soon...</h1> \r\n    \r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Testing","import React,{useState} from 'react'\r\nimport CourseCard from './CourseCard';\r\nimport Card2 from '../images/card1.png'\r\nimport Offcanvas from 'react-bootstrap/Offcanvas';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport {ConnectButton,Icon,TabList,Tab,useNotification} from 'web3uikit'\r\nimport { ethers } from 'ethers';\r\nimport './Testing.css'\r\nfunction Testing() {\r\n    const [link,setLink]=useState('W8U_w2CIzDk')\r\n    const [courseId,setCourseId]=useState(6)\r\n    const [moduleId,setModuleId]=useState(0)\r\n    const [notes,setNotes]=useState(0)\r\n    const [show, setShow] = useState(false);\r\n   \r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const videoLink=JSON.parse(localStorage.getItem('courseinfo')).etherjs\r\n    // const repeatCount = localStorage.getItem('user') ?parseInt(JSON.parse(localStorage.getItem(\"user\"))[courseId].numberOfModules) :videoLink.length;\r\n    const repeatCount = videoLink.length\r\n\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n\r\n    const dispatch0 = useNotification();\r\n\r\n    const handleNewNotification0 = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please Sign in to continue',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n    const dispatch = useNotification();\r\n\r\n    const handleNewNotification = (\r\n       \r\n    ) => {\r\n        dispatch({\r\n            type:\"error\",\r\n            message: 'Please connect your crypto wallet',\r\n            title: 'User Not Authenticated',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n        });\r\n    };\r\n\r\n    const dispatch1 = useNotification();\r\n\r\n    const handleNewNotification1 = (\r\n       \r\n    ) => {\r\n        dispatch1({\r\n            type:\"warning\",\r\n            message: 'Please complete the course to claim your NFT Certificate',\r\n            title: 'Course not completed',\r\n            icon:\"chevronRightX2\",\r\n            position:  'bottomR',\r\n            \r\n        });\r\n    };\r\n    const dispatch2 = useNotification();\r\n    const handleNewNotification2 = (\r\n       \r\n        ) => {\r\n            dispatch2({\r\n                type:\"success\",\r\n                message: 'You have claimed your NFT Certificate ! You can view it on OpenSea.',\r\n                title: 'Congratulations',\r\n                icon:\"chevronRightX2\",\r\n                position:  'bottomR',\r\n                \r\n            });\r\n        };\r\n    \r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n  return (\r\n    <div> \r\n        {videoLink.length==1 && videoLink[0]==\"\" ?<div style={{color:'white'}}><h1>Coming Soon...</h1></div>: <div >\r\n        \r\n        {localStorage.getItem('name')? <div class=\"container\">\r\n        <div class=\"right\">\r\n        <strong>\r\n      Module &nbsp;{moduleId+1}\r\n      </strong>\r\n    <CourseCard link={link} notes={notes} courseId={courseId} moduleId={moduleId} courseName=\"etherjs\" />\r\n     \r\n      \r\n    </div>\r\n    <br></br>\r\n    <div class=\"left\">\r\n        &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;  &nbsp;&nbsp;\r\n        <strong>\r\n            <img style={{width:'5em'}} src={Card2}></img>\r\n            <br></br>\r\n            <br></br>\r\n     Frontend Blockchain Development: Ether JS\r\n     </strong>\r\n     <hr></hr>\r\n\r\n    {Array.from({ length: repeatCount }, (_, i) => (\r\n        <div key={i}>\r\n          <div className=\"fruits-divst\" onClick={async() => {\r\n            setCourseId(courseId);\r\n            setModuleId(i);\r\n\r\n           \r\n                setLink(videoLink[i])\r\n             \r\n             \r\n            setNotes('notes');\r\n          }}>\r\n            \r\n            <l style={{ color: 'violet' }} className={JSON.parse(localStorage.getItem(\"user\")) && JSON.parse(localStorage.getItem(\"user\"))[courseId].isModuleComplete[`${i}`]==true ||localStorage.getItem(`C${courseId}M${i}`)=='true' || JSON.parse(localStorage.getItem(\"userinfo\")).etherjs.length>i && JSON.parse(localStorage.getItem(\"userinfo\")).etherjs.includes(`s${i}`) ? 'fas fa-check-circle checked-icon' : 'far fa-circle unchecked-icon'}></l>\r\n            <strong>\r\n              &nbsp;\r\n              Module &nbsp; {i+1}\r\n              <br></br>\r\n              <l style={{ color: 'violet', fontSize: '17px' }}>{i+1}/5</l> <l style={{ color: 'grey', fontSize: '15px' }}>Videos (12 mins)</l>\r\n            </strong>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      ))}\r\n\r\n      <hr></hr>\r\n      <button type=\"button\" class={localStorage.getItem(`s7completed`) && localStorage.getItem(`s7completed`)=='true' ?`btn btn-success`: `btn btn-danger`}     onClick={async()=>{\r\n        \r\n\r\n        if(typeof window.ethereum == 'undefined') {\r\n           handleNewNotification()\r\n        }\r\n\r\n\r\n        \r\n        if(localStorage.getItem(`s7completed`) && localStorage.getItem(`s7completed`)=='true')\r\n        {\r\n            const accounts = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n              });\r\n            window.open(`https://testnets.opensea.io/${accounts[0]}`, '_blank');\r\n        }\r\n        else\r\n        {\r\n            let flag=0;\r\n            for (let index = 0; index < videoLink.length; index++) {\r\n                \r\n               if(!(JSON.parse(localStorage.getItem('userinfo')).etherjs.includes(`s${index}`)))\r\n               {\r\n                flag=flag+1;\r\n                \r\n               }\r\n            }\r\n            if(flag==0)\r\n            {\r\n                const accounts = await window.ethereum.request({\r\n                    method: \"eth_requestAccounts\",\r\n                  });\r\n                const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n             \r\n            \r\n                const signer = provider.getSigner();\r\n            await window.ethereum.request({\r\n                method: \"wallet_addEthereumChain\",\r\n                params: [{\r\n                    chainId: \"0x13881\",\r\n                    rpcUrls: [\"https://rpc.ankr.com/polygon_mumbai\"],\r\n                    chainName: \"Mumbai\",\r\n                    nativeCurrency: {\r\n                        name: \"MATIC\",\r\n                        symbol: \"MATIC\",\r\n                        decimals: 18\r\n                    },\r\n                    blockExplorerUrls: [\"https://mumbai.polygonscan.com/\"]\r\n                }]\r\n            })\r\n           \r\n            \r\n            \r\n            const contractAddress = \"0xe9381c5B2302983f1FaBE46F3406c855DDcc4F3b\";\r\n            const contract = new ethers.Contract(\r\n                contractAddress,\r\n                abi,\r\n                signer\r\n            )\r\n          \r\n            contract.safeMint(\"Jai Shree Krishna\")\r\n            .then((transaction) => {\r\n            \r\n            handleNewNotification2()\r\n            localStorage.setItem(`s7completed`,'true')\r\n            window.location.reload(true)\r\n            })\r\n      \r\n            .catch((err) => {\r\n           alert(err)\r\n            handleNewNotification1()\r\n           \r\n            \r\n            });\r\n            \r\n            }\r\n\r\n            else{\r\n                handleNewNotification1()\r\n            }\r\n            }\r\n        \r\n        \r\n        }}\r\n        >{localStorage.getItem(`s7completed`) && localStorage.getItem(`s7completed`)=='true'?'View Your Certificate':'Claim Your NFT Certificate'}</button>\r\n\r\n    </div>\r\n  \r\n  </div>\r\n  :handleNewNotification0()}\r\n\r\n\r\n   \r\n  \r\n  </div>}\r\n       \r\n  </div>\r\n  \r\n  )\r\n}\r\n\r\nexport default Testing","import React,{useState,useEffect} from 'react'\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport './JobPortal.css'\r\nimport axios from 'axios';\r\nfunction JobPortal() {\r\n    const cardStyles = {\r\n      \r\n        // width:'15em',\r\n        // backgroundIimage: 'linear-gradient(to bottom right, yellow, orange)',\r\n        // color: 'black', // Set text color to white for better visibility on the gradient background\r\n        // boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', // Add a subtle box shadow\r\n        width:'15em',\r\n       \r\n  border: '10px solid rgba(0, 0, 0)',\r\n  background: 'rgba(255, 255, 255)',\r\n  color:'black',\r\n  padding:'5px'\r\n      };\r\n    useEffect(async ()=>{\r\n        const apiUrl = 'https://api.social3.club/job/get?page=1&size=2000';\r\n\r\n        // Make a GET request to the API\r\n        axios.get(apiUrl).then((res)=>{\r\n            const jobsData=res.data.data.jobs\r\n           console.log(res.data.data.jobs)\r\n           const uniqueCrawlerCompanyNames = new Set();\r\n\r\n// Filter the jobs to remove duplicates based on crawler company names\r\nconst filteredJobs = jobsData.filter((job) => {\r\n  // Check if the crawler company name is not in the Set\r\n  if (job.crawler_company && !uniqueCrawlerCompanyNames.has(job.crawler_company.name)) {\r\n    // If not in the Set, add it and return true (keep this job)\r\n    uniqueCrawlerCompanyNames.add(job.crawler_company.name);\r\n    return true;\r\n  }\r\n  // If it's in the Set, return false (remove this job)\r\n  return false;\r\n});\r\n\r\n// filteredJobs now contains the unique jobs based on crawler company names\r\nconsole.log();\r\n           setJobs(filteredJobs)\r\n        }).then((err)=>{\r\n           console.log(err)\r\n        })\r\n\r\n    },[])\r\n    const [jobs,setJobs]=useState([])\r\n    const [title,setTitle]=useState([])\r\n  return (\r\n    <div style={{color:'black'}}> \r\n    <div class=\"jobportal\">\r\n    {jobs.map((i)=>{ if(i.crawler_company && i.crawler_company.avatar_url)\r\n        return(\r\n            \r\n                <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" style={{width:'10em',height:'7em'}} src={i.crawler_company.avatar_url} />\r\n        <Card.Body>\r\n          <br></br>\r\n          <Card.Title>{i.title}</Card.Title>\r\n         \r\n          Location: \r\n          {i.location}\r\n                <br></br>\r\n              Company Name: {i.crawler_company.name}\r\n              <br></br> \r\n              <button class=\"cbutton\" onClick={()=>{window.open(`${i.apply_link}` , \"_blank\")}}>Apply</button>\r\n               \r\n               \r\n        </Card.Body>\r\n       &nbsp;&nbsp;&nbsp;&nbsp;\r\n      </Card>\r\n                \r\n               \r\n          \r\n        )\r\n    })}\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobPortal","export default __webpack_public_path__ + \"static/media/etherjs.542239d6.jpg\";","export default __webpack_public_path__ + \"static/media/webdev.7b4ad025.jpg\";","export default __webpack_public_path__ + \"static/media/reactjs.69d8b8f0.jpg\";","export default __webpack_public_path__ + \"static/media/solidity.5f3dc5e9.jpg\";","export default __webpack_public_path__ + \"static/media/blockchain.882997b8.jpg\";","export default __webpack_public_path__ + \"static/media/dsa.612e92ed.jpg\";","export default __webpack_public_path__ + \"static/media/logo.00dde1ba.png\";","import React from 'react'\r\nimport { useState,useEffect } from \"react\";\r\nimport { signInWithGoogle } from \"./firebase-config\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport card1 from './images/card1.png'\r\nimport card2 from './images/card2.png'\r\nimport card3 from './images/card3.png'\r\nimport etherjs from './images/etherjs.jpg'\r\nimport webdev from './images/webdev.jpg'\r\nimport reactjs from './images/reactjs.jpg'\r\nimport blockchain from './images/blockchain.jpg'\r\nimport solidity from './images/solidity.jpg'\r\nimport dsa from './images/dsa.jpg'\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css'; \r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Typewriter from 'typewriter-effect';\r\nimport heading from './images2/heading.png'\r\nimport './App.css';\r\nimport logo from \"./images/logo.png\";\r\nimport Home from './pages/Home'\r\nimport './HomePage.css'\r\nimport { Routes, Route,Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n\r\n    const [loginButtonColor,setLoginButtonColor]=useState('button-1')\r\n  const [loginButtonText,setLoginButtonText]=useState('Sign in')\r\n  const [loginImage,setLoginImage]=useState(false)\r\n  const [loginButtonImage,setLoginButtonImage]=useState('')\r\n\r\n  let courseObj=[{id:0,name:'Intro to Programming',img:card1,}]\r\n\r\n \r\n  const scrollToSection = (sectionId) => {\r\n    const section = document.getElementById(sectionId);\r\n    if (section) {\r\n      const scrollOptions = {\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n      };\r\n\r\n      // Calculate the scroll duration based on the distance to scroll and the desired time (1 second in this case).\r\n      const scrollDuration = 500; // 1 second in milliseconds.\r\n\r\n      // Calculate the distance to scroll to the target section from the current position.\r\n      const distance = section.getBoundingClientRect().top;\r\n\r\n      // Calculate the number of frames needed for the animation.\r\n      const frames = Math.ceil(scrollDuration / (1000 / 60));\r\n\r\n      // Calculate the amount to scroll in each frame.\r\n      const scrollStep = distance / frames;\r\n\r\n      // Define the function to perform the scrolling animation.\r\n      const scrollAnimation = (currentStep) => {\r\n        if (currentStep >= frames) return;\r\n\r\n        // Calculate the new scroll position.\r\n        const newScrollPosition = window.pageYOffset + scrollStep;\r\n\r\n        // Perform the scroll step.\r\n        window.scrollTo(0, newScrollPosition);\r\n\r\n        // Schedule the next step of the animation.\r\n        setTimeout(() => scrollAnimation(currentStep + 1), 1000 / 60);\r\n      };\r\n\r\n      // Start the scrolling animation.\r\n      scrollAnimation(0);\r\n    }\r\n  };\r\n\r\n    // Define the styles for the card with a red gradient background\r\n    const cardStyles = {\r\n      \r\n      // width:'15em',\r\n      // backgroundIimage: 'linear-gradient(to bottom right, yellow, orange)',\r\n      // color: 'black', // Set text color to white for better visibility on the gradient background\r\n      // boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', // Add a subtle box shadow\r\n      width:'15em',\r\n     \r\nborder: '0.65px solid rgba(255, 255, 255, 0.12)',\r\nbackground: 'rgba(255, 255, 255, 0.08)',\r\ncolor:'white',\r\npadding:'15px'\r\n    };\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    if(localStorage.getItem(\"name\"))\r\n    {\r\n      setLoginButtonColor('button-3')\r\n      setLoginButtonText('Logged in as '+localStorage.getItem(\"name\"))\r\n      setLoginButtonImage(localStorage.getItem(\"profilePic\"))\r\n      setLoginImage(true)\r\n      console.log(localStorage)\r\n    }\r\n   \r\n  }, [])\r\n  return (\r\n    <div> \r\n      \r\n    \r\n      <br></br>\r\n    <br></br>\r\n    <div id=\"home\"></div>\r\n\r\n    <center><img class=\"heading\" src={heading} alt=\"Heading\" /></center>\r\n   <center>\r\n\r\n    \r\n  \r\n<center>\r\n\r\n    {/* <Home string={[\"Learn Blockchain Development\",\"Become Job Ready in 2-3 months!\"]}/> */}\r\n \r\n    </center>\r\n    </center>\r\n    \r\n    <br></br>\r\n    <br></br>\r\n   \r\n    <hr></hr>\r\n    {/* <div style={{color:'yellow',marginLeft:'5em'}} >\r\n    <span class=\"bigger\">&raquo;</span> Our Courses\r\n    </div> */}\r\n   \r\n  \r\n   \r\n\r\n    <div class=\"coursecards\">\r\n    <div >\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={card2} />\r\n        <Card.Body>\r\n          <br></br>\r\n          <Card.Title>Intro to Programming with C++</Card.Title>\r\n        <br></br>\r\n          {localStorage.getItem('name')? <Link to=\"/testing\"><button class=\"cbutton\" onClick={()=>{\r\n           \r\n          }} >explore more</button></Link>:\r\n          <button class=\"cbutton\" onClick={signInWithGoogle}>Let's Go </button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n    <div >\r\n    \r\n    <Card style={cardStyles}>\r\n      <Card.Img  variant=\"top\" src={solidity} />\r\n      <br></br>\r\n      <Card.Body>\r\n        <Card.Title>Blockchain Basics</Card.Title>\r\n        <br></br>\r\n        {localStorage.getItem('name')? <Link to=\"/testing3\"><button class=\"cbutton\" onClick={()=>{\r\n           \r\n          }} >explore more</button></Link>:\r\n          <button class=\"cbutton\" onClick={signInWithGoogle}>Let's Go </button>\r\n\r\n          \r\n          }\r\n       \r\n      </Card.Body>\r\n    </Card>\r\n  </div>\r\n \r\n\r\n    <div >\r\n\r\n    \r\n      <Card style={cardStyles}>\r\n        <Card.Img  variant=\"top\" src={card3} />\r\n        <br></br>\r\n        <Card.Body>\r\n          <Card.Title>Blockchain Backend: Solidity Programming</Card.Title>\r\n          <br></br>\r\n          {localStorage.getItem('name')?<Link to=\"/testing2\"> <button class=\"cbutton\"  onClick={()=>{\r\n          \r\n        }}  >explore more </button></Link>:\r\n          <button class=\"cbutton\" onClick={signInWithGoogle}>explore more</button>\r\n\r\n          \r\n          }\r\n         \r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n   \r\n    \r\n    <div >\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={dsa} />\r\n        <br></br>\r\n        <Card.Body>\r\n          <Card.Title>Data Structures & Algorithms</Card.Title>\r\n          <br></br>\r\n          {localStorage.getItem('name')? <button class=\"cbuttoncomingsoon\"  onClick={()=>{\r\n          \r\n        }}  >coming soon </button>:\r\n          <button class=\"cbutton\" onClick={signInWithGoogle}>explore more</button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n\r\n    <div >\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={webdev} />\r\n        <br></br>\r\n        <Card.Body>\r\n          <Card.Title>Basic Web Development: HTML, CSS & JavaScript</Card.Title>\r\n          <br></br>\r\n          {localStorage.getItem('name')? <button class=\"cbuttoncomingsoon\"  onClick={()=>{\r\n          \r\n        }}  >coming soon </button>:\r\n          <button class=\"cbutton\" onClick={signInWithGoogle}>explore more</button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n    <div >\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={reactjs} />\r\n        <br></br>\r\n        <Card.Body>\r\n          <Card.Title> React JS: Mastery Series</Card.Title>\r\n          <br></br>\r\n          {localStorage.getItem('name')? <button class=\"cbuttoncomingsoon\"  onClick={()=>{\r\n          \r\n        }}  >coming soon </button>:\r\n          <button class=\"cbutton\" onClick={signInWithGoogle}>explore more</button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </div >\r\n\r\n    <div>\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={etherjs} />\r\n        <br></br>\r\n        <Card.Body>\r\n          <Card.Title>Frontend Blockchain Development: Ether JS</Card.Title>\r\n          <br></br>\r\n          {localStorage.getItem('name')? <button class=\"cbuttoncomingsoon\"  onClick={()=>{\r\n          \r\n        }}  >coming soon </button>:\r\n          <button class=\"cbutton\" onClick={signInWithGoogle}>explore more</button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n    \r\n  </div>\r\n    <br></br>\r\n    <br></br>\r\n\r\n<div id=\"devrel\" ></div>\r\n<br></br>\r\n<br></br>\r\n<center>\r\n\r\n    {/* <Home string={[\"Automate Developer Aquisition\"]}/> */}\r\n    </center>\r\n<br></br>\r\n<br></br>\r\n    <div style={{color:'white'}} class=\"description\">\r\n\r\n   \r\n\r\n{/* <section >\r\n  <ul>\r\n   \r\n    \r\n    \r\n    <li>\r\n      <strong>Physical and Workshops for Holistic Learning:</strong> We go beyond digital education by organizing physical workshops in colleges across India.\r\n      Our team of experts travels the length and breadth of the country, imparting hands-on knowledge and fostering practical understanding of cutting-edge Web 3 technologies.\r\n    </li>\r\n    <li>\r\n      <strong>End-to-End Web 3 Ecosystem Support:</strong> Connectverse is committed to supporting the entire Web 3 ecosystem. From providing valuable resources\r\n      to facilitating partnerships and collaborations, we act as a catalyst for growth and innovation.\r\n    </li>\r\n    <li>\r\n      <strong>Thought Leadership and Thoughtful Education:</strong> Our courses are designed and curated by industry experts, ensuring that our students receive the\r\n      most up-to-date and relevant information. We embrace thought leadership and believe in empowering developers to think beyond boundaries.\r\n    </li>\r\n    <li>\r\n      <strong>Secure and Trustworthy:</strong> Security is paramount in the Web 3 space, and we prioritize safeguarding the interests of our users.\r\n      Trust is the foundation of our platform, and we maintain the highest standards of data privacy and integrity.\r\n    </li>\r\n  </ul>\r\n</section> */}\r\n    </div>\r\n    \r\n    <br></br>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport { useState,useEffect } from \"react\";\r\nimport { signInWithGoogle } from \"./firebase-config\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport card1 from './images/card1.png'\r\nimport card2 from './images/card2.png'\r\nimport card3 from './images/card3.png'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport './App.css';\r\nimport logo from \"./images2/logo.png\";\r\nimport Home from './pages/Home'\r\nimport { Routes, Route,Link } from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n\r\n    const [loginButtonColor,setLoginButtonColor]=useState('button-1')\r\n  const [loginButtonText,setLoginButtonText]=useState('Sign in')\r\n  const [loginImage,setLoginImage]=useState(false)\r\n  const [loginButtonImage,setLoginButtonImage]=useState('')\r\n\r\n  let courseObj=[{id:0,name:'Intro to Programming',img:card1,}]\r\n\r\n \r\n  const scrollToSection = (sectionId) => {\r\n    const section = document.getElementById(sectionId);\r\n    if (section) {\r\n      const scrollOptions = {\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n      };\r\n\r\n      // Calculate the scroll duration based on the distance to scroll and the desired time (1 second in this case).\r\n      const scrollDuration = 500; // 1 second in milliseconds.\r\n\r\n      // Calculate the distance to scroll to the target section from the current position.\r\n      const distance = section.getBoundingClientRect().top;\r\n\r\n      // Calculate the number of frames needed for the animation.\r\n      const frames = Math.ceil(scrollDuration / (1000 / 60));\r\n\r\n      // Calculate the amount to scroll in each frame.\r\n      const scrollStep = distance / frames;\r\n\r\n      // Define the function to perform the scrolling animation.\r\n      const scrollAnimation = (currentStep) => {\r\n        if (currentStep >= frames) return;\r\n\r\n        // Calculate the new scroll position.\r\n        const newScrollPosition = window.pageYOffset + scrollStep;\r\n\r\n        // Perform the scroll step.\r\n        window.scrollTo(0, newScrollPosition);\r\n\r\n        // Schedule the next step of the animation.\r\n        setTimeout(() => scrollAnimation(currentStep + 1), 1000 / 60);\r\n      };\r\n\r\n      // Start the scrolling animation.\r\n      scrollAnimation(0);\r\n    }\r\n  };\r\n\r\n    // Define the styles for the card with a red gradient background\r\n    const cardStyles = {\r\n      \r\n      width:'15em',\r\n      backgroundIimage: 'linear-gradient(to bottom right, yellow, orange)',\r\n      color: 'black', // Set text color to white for better visibility on the gradient background\r\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', // Add a subtle box shadow\r\n    };\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    if(localStorage.getItem(\"name\"))\r\n    {\r\n      setLoginButtonColor('button-3')\r\n      setLoginButtonText('Logged in as '+localStorage.getItem(\"name\"))\r\n      setLoginButtonImage(localStorage.getItem(\"profilePic\"))\r\n      setLoginImage(true)\r\n      console.log(localStorage)\r\n    }\r\n   \r\n  }, [])\r\n  return (\r\n    <div> \r\n      \r\n    \r\n      <br></br>\r\n    <br></br>\r\n    <div id=\"home\"></div>\r\n    <Home string={[\"Learn Blockchain Development\",\"Become Job Ready in 2-3 months!\"]}/>\r\n    \r\n    <br></br>\r\n    <br></br>\r\n   \r\n    <hr></hr>\r\n    {/* <div style={{color:'yellow',marginLeft:'5em'}} >\r\n    <span class=\"bigger\">&raquo;</span> Our Courses\r\n    </div> */}\r\n   \r\n  \r\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\r\n    <Row style={{marginLeft:'3em'}}>\r\n\r\n    <Col>\r\n    \r\n      <Card style={cardStyles}>\r\n        <Card.Img  variant=\"top\" src={card1} />\r\n        <Card.Body>\r\n          <Card.Title>Intro to Programming</Card.Title>\r\n          {localStorage.getItem('name')? <Link to=\"/testing\"><Button variant=\"primary\" onClick={()=>{\r\n            \r\n          }}  >Let's Go</Button></Link>:\r\n          <Button variant=\"primary\" onClick={signInWithGoogle}>Let's Go</Button>\r\n\r\n          \r\n          }\r\n         \r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n   \r\n    <Col>\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={card2} />\r\n        <Card.Body>\r\n          <Card.Title>Basic Web Development</Card.Title>\r\n        \r\n          {localStorage.getItem('name')? <Link to=\"/testing2\"><Button variant=\"primary\" onClick={()=>{\r\n           \r\n          }} >Let's Go</Button></Link>:\r\n          <Button variant=\"primary\" onClick={signInWithGoogle}>Let's Go</Button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col>\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={card3} />\r\n        <Card.Body>\r\n          <Card.Title>Blockchain Development</Card.Title>\r\n          {localStorage.getItem('name')? <Link to=\"/testing3\"><Button variant=\"primary\" onClick={()=>{\r\n          \r\n          }} >Let's Go</Button></Link>:\r\n          <Button variant=\"primary\" onClick={signInWithGoogle}>Let's Go</Button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n    <br></br>\r\n    <br></br>\r\n\r\n<div id=\"devrel\" ></div>\r\n<br></br>\r\n<br></br>\r\n\r\n\r\n    <Home string={[\"Automate Developer Aquisition with ConnectVerse\"]}/>\r\n<br></br>\r\n<br></br>\r\n    <div style={{color:'white'}} class=\"description\">\r\n\r\n   \r\n\r\n<section >\r\n  <ul>\r\n    <li>\r\n      <strong>Automated DevRel for Web 3 Protocols:</strong> Our platform simplifies the DevRel process for Web 3 protocols\r\n      by creating high-quality, informative courses and tutorials. We bridge the gap between developers and complex decentralized\r\n      technologies, making the learning journey seamless and rewarding.\r\n    </li>\r\n    <li>\r\n      <strong>Empowering over 2000 Students:</strong> With a thriving community of over 2000 students, Connectverse is at the forefront\r\n      of educating and nurturing talent in the Web 3 space. Join our platform to become part of an ever-growing network of skilled\r\n      and passionate developers.\r\n    </li>\r\n    <li>\r\n      <strong>Seamless B2B Solutions:</strong> As a B2B company, we understand the unique needs of businesses operating in the Web 3 ecosystem.\r\n      Our tailor-made solutions cater to the specific requirements of our clients, enabling them to enhance their developer relations and drive adoption.\r\n    </li>\r\n    <li>\r\n      <strong>Physical Workshops for Holistic Learning:</strong> We go beyond digital education by organizing physical workshops in colleges across India.\r\n      Our team of experts travels the length and breadth of the country, imparting hands-on knowledge and fostering practical understanding of cutting-edge Web 3 technologies.\r\n    </li>\r\n    <li>\r\n      <strong>End-to-End Web 3 Ecosystem Support:</strong> Connectverse is committed to supporting the entire Web 3 ecosystem. From providing valuable resources\r\n      to facilitating partnerships and collaborations, we act as a catalyst for growth and innovation.\r\n    </li>\r\n    <li>\r\n      <strong>Thought Leadership and Thoughtful Education:</strong> Our courses are designed and curated by industry experts, ensuring that our students receive the\r\n      most up-to-date and relevant information. We embrace thought leadership and believe in empowering developers to think beyond boundaries.\r\n    </li>\r\n    <li>\r\n      <strong>Secure and Trustworthy:</strong> Security is paramount in the Web 3 space, and we prioritize safeguarding the interests of our users.\r\n      Trust is the foundation of our platform, and we maintain the highest standards of data privacy and integrity.\r\n    </li>\r\n  </ul>\r\n</section>\r\n    </div>\r\n    \r\n    <br></br>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage","import React,{useState} from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport CourseCard from './CourseCard';\r\nimport { ethers } from 'ethers';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Modal';\r\nimport { signInWithGoogle } from \"../firebase-config\";\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nfunction Course1() {\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [showNFT, setShowNFT] = useState(false);\r\n    const handleCloseNFT = () => setShow(false);\r\n    const handleShowNFT = () => setShow(true);\r\n    \r\n    let abi=[\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"name\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"modules\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"addCourse\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"modules\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"addModules\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_fromTokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_toTokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"BatchMetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"courseId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"recipient\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"claimCertificate\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"module\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"completeModule\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"id\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"createCertificate\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"MetadataUpdate\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_email\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_phono\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"register\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"uri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"safeMint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"certificate\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"email\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getCourseById\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isRegistered\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"modulesCompleted\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"numberOfCourses\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"numberOfModules\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"phono\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ]\r\n\r\n    const buttonStyle = {\r\n        backgroundColor: 'transparent', // Set the background color to transparent\r\n        border: '1px solid transparent', // Set the border to transparent\r\n        color: '#000', // Set the color of the text inside the button\r\n        padding: '10px 20px', // Add padding to the button for better appearance\r\n        fontSize: '16px', // Set the font size of the text\r\n        cursor: 'pointer', // Change the cursor to a hand pointer on hover\r\n      };\r\n\r\n  return (\r\n    <div>\r\n        {localStorage.getItem('email')?<div><Alert key='danger' variant='danger'>\r\n         \r\n          <button style={buttonStyle} onClick={signInWithGoogle}> You need to <span style={{textDecoration: 'underline'}}>Login</span> to continue the course.</button>\r\n         \r\n        \r\n        </Alert>{signInWithGoogle()}</div>:<div><br></br>\r\n        <CourseCard link=\"https://youtube.com/embed/WmDEzV9YlK4\" notes=\"qwerty\" courseId=\"0\" moduleId=\"0\" />\r\n        <br></br>\r\n        <CourseCard link=\"https://youtube.com/embed/WmDEzV9YlK4\" notes=\"qwerty\" courseId=\"0\" moduleId=\"1\" />\r\n        <br></br>\r\n        <CourseCard link=\"https://youtube.com/embed/WmDEzV9YlK4\" notes=\"qwerty\" courseId=\"0\" moduleId=\"2\" />\r\n        <br></br>\r\n        <CourseCard link=\"https://youtube.com/embed/WmDEzV9YlK4\" notes=\"qwerty\" courseId=\"0\" moduleId=\"3\" />\r\n        <br></br>\r\n        <CourseCard link=\"https://youtube.com/embed/WmDEzV9YlK4\" notes=\"qwerty\" courseId=\"0\" moduleId=\"4\" />\r\n       \r\n       <br></br>\r\n       <button type=\"button\" class=\"btn btn-success\"onClick={async()=>{\r\n\r\n        if(typeof window.ethereum == 'undefined') {\r\n            setShow(true)\r\n        }\r\n  \r\n         const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n         \r\n    \r\n        const signer = provider.getSigner();\r\n\r\n       \r\n        const contractAddress = \"0x031fe39C0F6c6E032dd2154d3688671a1ba3a4DC\";\r\n        \r\n        const accounts = await window.ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n          \r\n        const contract = new ethers.Contract(\r\n            contractAddress,\r\n            abi,\r\n            signer\r\n        )\r\n        \r\n            \r\n        contract.claimCertificate(0,accounts[0])\r\n  .then((transaction) => {\r\n    alert(\"done\");\r\n  })\r\n  .catch((err) => {\r\n\r\n    setShowNFT(true)\r\n  });\r\n\r\n    \r\n    \r\n    }}\r\n >Claim Your NFT Certificate</button>\r\n\r\n<Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Wallet not connected</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         Make sure that you have <a href=\"https://metamask.io/download/\" target=\"_blank\">wallet</a> installed on your browser\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n            window.open(\"https://metamask.io/download/\", '_blank');\r\n          }}>Install Wallet</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      \r\n      <Modal\r\n        show={showNFT}\r\n        onHide={handleCloseNFT}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Course not completed</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         You need to complete the course before claiming your NFT Certificate\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n            window.open(\"https://metamask.io/download/\", '_blank');\r\n          }}>Install Wallet</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      \r\n      \r\n      \r\n      \r\n      </div>}\r\n        \r\n</div>\r\n        \r\n  )\r\n}\r\n\r\nexport default Course1","import React from 'react'\r\nimport { useState,useEffect } from \"react\";\r\nimport { signInWithGoogle } from \"./firebase-config\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport card1 from './images/card1.png'\r\nimport card2 from './images/card2.png'\r\nimport card3 from './images/card3.png'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport './App.css';\r\nimport logo from \"./images/logo.png\";\r\nimport Home from './pages/Home'\r\n\r\nimport { Routes, Route,Link } from \"react-router-dom\";\r\nfunction Courses() {\r\n    const [loginButtonColor,setLoginButtonColor]=useState('button-1')\r\n    const [loginButtonText,setLoginButtonText]=useState('Sign in')\r\n    const [loginImage,setLoginImage]=useState(false)\r\n    const [loginButtonImage,setLoginButtonImage]=useState('')\r\n  \r\n   \r\n    const scrollToSection = (sectionId) => {\r\n      const section = document.getElementById(sectionId);\r\n      if (section) {\r\n        const scrollOptions = {\r\n          behavior: 'smooth',\r\n          block: 'start',\r\n        };\r\n  \r\n        // Calculate the scroll duration based on the distance to scroll and the desired time (1 second in this case).\r\n        const scrollDuration = 500; // 1 second in milliseconds.\r\n  \r\n        // Calculate the distance to scroll to the target section from the current position.\r\n        const distance = section.getBoundingClientRect().top;\r\n  \r\n        // Calculate the number of frames needed for the animation.\r\n        const frames = Math.ceil(scrollDuration / (1000 / 60));\r\n  \r\n        // Calculate the amount to scroll in each frame.\r\n        const scrollStep = distance / frames;\r\n  \r\n        // Define the function to perform the scrolling animation.\r\n        const scrollAnimation = (currentStep) => {\r\n          if (currentStep >= frames) return;\r\n  \r\n          // Calculate the new scroll position.\r\n          const newScrollPosition = window.pageYOffset + scrollStep;\r\n  \r\n          // Perform the scroll step.\r\n          window.scrollTo(0, newScrollPosition);\r\n  \r\n          // Schedule the next step of the animation.\r\n          setTimeout(() => scrollAnimation(currentStep + 1), 1000 / 60);\r\n        };\r\n  \r\n        // Start the scrolling animation.\r\n        scrollAnimation(0);\r\n      }\r\n    };\r\n  \r\n      // Define the styles for the card with a red gradient background\r\n      const cardStyles = {\r\n        \r\n        width:'15em',\r\n        backgroundIimage: 'linear-gradient(to bottom right, yellow, orange)',\r\n        color: 'black', // Set text color to white for better visibility on the gradient background\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', // Add a subtle box shadow\r\n      };\r\n    \r\n  \r\n    useEffect(() => {\r\n      \r\n      if(localStorage.getItem(\"name\"))\r\n      {\r\n        setLoginButtonColor('button-3')\r\n        setLoginButtonText('Logged in as '+localStorage.getItem(\"name\"))\r\n        setLoginButtonImage(localStorage.getItem(\"profilePic\"))\r\n        setLoginImage(true)\r\n        console.log(localStorage)\r\n      }\r\n     \r\n    }, [])\r\n  return (\r\n    <div>\r\n\r\n<br></br>\r\n<br></br>\r\n<Row style={{marginLeft:'3em'}}>\r\n\r\n    <Col>\r\n    \r\n      <Card style={cardStyles}>\r\n        <Card.Img  variant=\"top\" src={card1} />\r\n        <Card.Body>\r\n          <Card.Title>Intro to Programming</Card.Title>\r\n          {localStorage.getItem('name')? <Link to=\"/testing\"><Button variant=\"primary\" onClick={()=>{\r\n            \r\n          }}  >Let's Go</Button></Link>:\r\n          <Button variant=\"primary\" onClick={signInWithGoogle}>Let's Go</Button>\r\n\r\n          \r\n          }\r\n         \r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n   \r\n    <Col>\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={card2} />\r\n        <Card.Body>\r\n          <Card.Title>Basic Web Development</Card.Title>\r\n        \r\n          {localStorage.getItem('name')? <Link to=\"/testing2\"><Button variant=\"primary\" onClick={()=>{\r\n           \r\n          }} >Let's Go</Button></Link>:\r\n          <Button variant=\"primary\" onClick={signInWithGoogle}>Let's Go</Button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n    <Col>\r\n      <Card style={cardStyles}>\r\n        <Card.Img variant=\"top\" src={card3} />\r\n        <Card.Body>\r\n          <Card.Title>Blockchain Development</Card.Title>\r\n          {localStorage.getItem('name')? <Link to=\"/testing3\"><Button variant=\"primary\" onClick={()=>{\r\n          \r\n          }} >Let's Go</Button></Link>:\r\n          <Button variant=\"primary\" onClick={signInWithGoogle}>Let's Go</Button>\r\n\r\n          \r\n          }\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Courses","import React from 'react'\r\nimport { useState,useEffect } from \"react\";\r\nimport { signInWithGoogle } from \"./firebase-config\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport card1 from './images/card1.png'\r\nimport card2 from './images/card2.png'\r\nimport card3 from './images/card3.png'\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport './App.css';\r\nimport logo from \"./images/logo.png\";\r\nimport Home from './pages/Home'\r\nimport { Routes, Route,Link } from \"react-router-dom\";\r\nfunction Courses() {\r\n    const [loginButtonColor,setLoginButtonColor]=useState('button-1')\r\n    const [loginButtonText,setLoginButtonText]=useState('Sign in')\r\n    const [loginImage,setLoginImage]=useState(false)\r\n    const [loginButtonImage,setLoginButtonImage]=useState('')\r\n  \r\n   \r\n    const scrollToSection = (sectionId) => {\r\n      const section = document.getElementById(sectionId);\r\n      if (section) {\r\n        const scrollOptions = {\r\n          behavior: 'smooth',\r\n          block: 'start',\r\n        };\r\n  \r\n        // Calculate the scroll duration based on the distance to scroll and the desired time (1 second in this case).\r\n        const scrollDuration = 500; // 1 second in milliseconds.\r\n  \r\n        // Calculate the distance to scroll to the target section from the current position.\r\n        const distance = section.getBoundingClientRect().top;\r\n  \r\n        // Calculate the number of frames needed for the animation.\r\n        const frames = Math.ceil(scrollDuration / (1000 / 60));\r\n  \r\n        // Calculate the amount to scroll in each frame.\r\n        const scrollStep = distance / frames;\r\n  \r\n        // Define the function to perform the scrolling animation.\r\n        const scrollAnimation = (currentStep) => {\r\n          if (currentStep >= frames) return;\r\n  \r\n          // Calculate the new scroll position.\r\n          const newScrollPosition = window.pageYOffset + scrollStep;\r\n  \r\n          // Perform the scroll step.\r\n          window.scrollTo(0, newScrollPosition);\r\n  \r\n          // Schedule the next step of the animation.\r\n          setTimeout(() => scrollAnimation(currentStep + 1), 1000 / 60);\r\n        };\r\n  \r\n        // Start the scrolling animation.\r\n        scrollAnimation(0);\r\n      }\r\n    };\r\n  \r\n      // Define the styles for the card with a red gradient background\r\n      const cardStyles = {\r\n        \r\n        width:'15em',\r\n        backgroundIimage: 'linear-gradient(to bottom right, yellow, orange)',\r\n        color: 'black', // Set text color to white for better visibility on the gradient background\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', // Add a subtle box shadow\r\n      };\r\n    \r\n  \r\n    useEffect(() => {\r\n      \r\n      if(localStorage.getItem(\"name\"))\r\n      {\r\n        setLoginButtonColor('button-3')\r\n        setLoginButtonText('Logged in as '+localStorage.getItem(\"name\"))\r\n        setLoginButtonImage(localStorage.getItem(\"profilePic\"))\r\n        setLoginImage(true)\r\n        console.log(localStorage)\r\n      }\r\n     \r\n    }, [])\r\n  return (\r\n    <div>\r\n\r\n<Home string={[\"Automate Developer Aquisition with ConnectVerse\"]}/>\r\n<br></br>\r\n<br></br>\r\n    <div style={{color:'white'}} class=\"description\">\r\n\r\n   \r\n\r\n<section >\r\n  <ul>\r\n    <li>\r\n      <strong>Automated DevRel for Web 3 Protocols:</strong> Our platform simplifies the DevRel process for Web 3 protocols\r\n      by creating high-quality, informative courses and tutorials. We bridge the gap between developers and complex decentralized\r\n      technologies, making the learning journey seamless and rewarding.\r\n    </li>\r\n    <li>\r\n      <strong>Empowering over 2000 Students:</strong> With a thriving community of over 2000 students, Connectverse is at the forefront\r\n      of educating and nurturing talent in the Web 3 space. Join our platform to become part of an ever-growing network of skilled\r\n      and passionate developers.\r\n    </li>\r\n    <li>\r\n      <strong>Seamless B2B Solutions:</strong> As a B2B company, we understand the unique needs of businesses operating in the Web 3 ecosystem.\r\n      Our tailor-made solutions cater to the specific requirements of our clients, enabling them to enhance their developer relations and drive adoption.\r\n    </li>\r\n    <li>\r\n      <strong>Physical Workshops for Holistic Learning:</strong> We go beyond digital education by organizing physical workshops in colleges across India.\r\n      Our team of experts travels the length and breadth of the country, imparting hands-on knowledge and fostering practical understanding of cutting-edge Web 3 technologies.\r\n    </li>\r\n    <li>\r\n      <strong>End-to-End Web 3 Ecosystem Support:</strong> Connectverse is committed to supporting the entire Web 3 ecosystem. From providing valuable resources\r\n      to facilitating partnerships and collaborations, we act as a catalyst for growth and innovation.\r\n    </li>\r\n    <li>\r\n      <strong>Thought Leadership and Thoughtful Education:</strong> Our courses are designed and curated by industry experts, ensuring that our students receive the\r\n      most up-to-date and relevant information. We embrace thought leadership and believe in empowering developers to think beyond boundaries.\r\n    </li>\r\n    <li>\r\n      <strong>Secure and Trustworthy:</strong> Security is paramount in the Web 3 space, and we prioritize safeguarding the interests of our users.\r\n      Trust is the foundation of our platform, and we maintain the highest standards of data privacy and integrity.\r\n    </li>\r\n  </ul>\r\n</section>\r\n    </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Courses"," // import \"./App.css\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { signInWithGoogle } from \"./firebase-config\";\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { db } from \"./firebase-config\";\r\nimport {\r\n\tcollection,\r\n\tgetDocs,\r\n\taddDoc,\r\n\tupdateDoc,\r\n\tdeleteDoc,\r\n\tdoc,\r\n  } from \"firebase/firestore\";\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css'; \r\nimport { Card, Button, Row, Col } from 'react-bootstrap';\r\nimport card1 from './images/card1.png'\r\nimport card2 from './images/card2.png'\r\nimport card3 from './images/card3.png'\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { ethers } from 'ethers';\r\nimport './App.css';\r\nimport connectverse from './images2/logo.png'\r\nimport heading from './images2/heading.png'\r\nimport Home from './pages/Home'\r\nimport Testing from './pages/Testing';\r\nimport Testing2 from './pages/Testing2'\r\nimport Testing3 from './pages/Testing3'\r\nimport Testing4 from './pages/Testing4'\r\nimport Testing5 from './pages/Testing5'\r\nimport Testing6 from './pages/Testing6'\r\nimport Testing7 from './pages/Testing7'\r\nimport JobPortal from \"./JobPortal\";\r\nimport HomePage from \"./HomePage\";\r\nimport NewHome from './NewHome'\r\nimport Course1 from \"./pages/Course1\"\r\nimport Courses from './Courses'\r\nimport DevRel from './DevRel'\r\nimport { Routes, Route,Link } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  const [loginButtonColor,setLoginButtonColor]=useState('button-1')\r\n  const [loginButtonText,setLoginButtonText]=useState('Sign in ')\r\n  const [loginImage,setLoginImage]=useState(false)\r\n  const [loginButtonImage,setLoginButtonImage]=useState('')\r\n  const [account,setAccount]=useState('Connect Wallet')\r\n  const [accountShow,setAccountShow]=useState('')\r\n  const [balance,setBalance]=useState(0)\r\n  const [show, setShow] = useState(false);\r\n  const courseCollectionRef = collection(db, \"courses\");\r\n  const usersCollectionRef = collection(db, \"usercourse\");\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  AOS.init();\r\n\r\n  // You can also pass an optional settings object\r\n  // below listed default settings\r\n  AOS.init({\r\n\t// Global settings:\r\n\tdisable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function\r\n\tstartEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on\r\n\tinitClassName: 'aos-init', // class applied after initialization\r\n\tanimatedClassName: 'aos-animate', // class applied on animation\r\n\tuseClassNames: false, // if true, will add content of `data-aos` as classes on scroll\r\n\tdisableMutationObserver: false, // disables automatic mutations' detections (advanced)\r\n\tdebounceDelay: 50, // the delay on debounce used while resizing window (advanced)\r\n\tthrottleDelay: 99, // the delay on throttle used while scrolling the page (advanced)\r\n\t\r\n  \r\n\t// Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\r\n\toffset: 120, // offset (in px) from the original trigger point\r\n\tdelay: 0, // values from 0 to 3000, with step 50ms\r\n\tduration: 400, // values from 0 to 3000, with step 50ms\r\n\teasing: 'ease', // default easing for AOS animations\r\n\tonce: false, // whether animation should happen only once - while scrolling down\r\n\tmirror: false, // whether elements should animate out while scrolling past them\r\n\tanchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation\r\n  \r\n  });\r\n\r\n  let abi= [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"modules\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addCourse\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"modules\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addModules\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Approval\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ApprovalForAll\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"approve\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_fromTokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_toTokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"BatchMetadataUpdate\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"courseId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"recipient\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"claimCertificate\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"module\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"completeModule\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"id\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"uri\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"createCertificate\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"_tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"MetadataUpdate\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"previousOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"OwnershipTransferred\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_email\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"_phono\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"register\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"renounceOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"uri\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeMint\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes\",\r\n\t\t\t\t\"name\": \"data\",\r\n\t\t\t\t\"type\": \"bytes\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"safeTransferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"approved\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setApprovalForAll\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"courseId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"moduleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"linkString\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"setLink\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": true,\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"Transfer\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"from\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"to\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferFrom\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"newOwner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"transferOwnership\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"balanceOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"certificate\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"email\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getApproved\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getCourseById\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"courseId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"moduleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getLink\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"operator\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isApprovedForAll\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"courseId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"moduleId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isModuleComplete\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"isRegistered\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"link\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"modulesCompleted\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"name\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"numberOfCourses\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"numberOfModules\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"owner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"ownerOf\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"phono\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bytes4\",\r\n\t\t\t\t\"name\": \"interfaceId\",\r\n\t\t\t\t\"type\": \"bytes4\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"supportsInterface\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"symbol\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"tokenURI\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n \r\n  const scrollToSection = (sectionId) => {\r\n    const section = document.getElementById(sectionId);\r\n    if (section) {\r\n      const scrollOptions = {\r\n        behavior: 'smooth',\r\n        block: 'start',\r\n      };\r\n\r\n      // Calculate the scroll duration based on the distance to scroll and the desired time (1 second in this case).\r\n      const scrollDuration = 500; // 1 second in milliseconds.\r\n\r\n      // Calculate the distance to scroll to the target section from the current position.\r\n      const distance = section.getBoundingClientRect().top;\r\n\r\n      // Calculate the number of frames needed for the animation.\r\n      const frames = Math.ceil(scrollDuration / (1000 / 60));\r\n\r\n      // Calculate the amount to scroll in each frame.\r\n      const scrollStep = distance / frames;\r\n\r\n      // Define the function to perform the scrolling animation.\r\n      const scrollAnimation = (currentStep) => {\r\n        if (currentStep >= frames) return;\r\n\r\n        // Calculate the new scroll position.\r\n        const newScrollPosition = window.pageYOffset + scrollStep;\r\n\r\n        // Perform the scroll step.\r\n        window.scrollTo(0, newScrollPosition);\r\n\r\n        // Schedule the next step of the animation.\r\n        setTimeout(() => scrollAnimation(currentStep + 1), 1000 / 60);\r\n      };\r\n\r\n      // Start the scrolling animation.\r\n      scrollAnimation(0);\r\n    }\r\n  };\r\n\r\n    // Define the styles for the card with a red gradient background\r\n    const cardStyles = {\r\n      \r\n      width:'15em',\r\n      backgroundIimage: 'linear-gradient(to bottom right, yellow, orange)',\r\n      color: 'black', // Set text color to white for better visibility on the gradient background\r\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', // Add a subtle box shadow\r\n    };\r\n  \r\n\r\n  useEffect(async () => {\r\n    \r\n    if(localStorage.getItem(\"name\"))\r\n    {\r\n\t\t\r\n      setLoginButtonColor('button-3')\r\n      setLoginButtonText('Logged in as '+localStorage.getItem(\"name\"))\r\n      setLoginButtonImage(localStorage.getItem(\"profilePic\"))\r\n      setLoginImage(true)\r\n      console.log(localStorage)\r\n\t  const data = await getDocs(courseCollectionRef);\r\n\t\r\n\t  localStorage.setItem(\"myname\",\"Pranav Verma\")\r\n\t  const coursedata=data.docs.map((doc) => ({ ...doc.data(), id: doc.id }))\r\n\t \r\n\t  let blockchain=[];\r\n\t  \r\n\t  localStorage.setItem(\"blockchain\",JSON.stringify(coursedata[0].blockchain))\r\n\t  localStorage.setItem('courseinfo',JSON.stringify(coursedata[0]))\r\n\t  \r\n\r\n\t  const user = await getDocs(usersCollectionRef);\r\n\t  const userdata=user.docs.map((doc) => ({ ...doc.data(), id: doc.id }))\r\n\t  localStorage.setItem(\"userdata\",JSON.stringify(userdata))\r\n\t let flag=0;\r\n\t  for (let i = 0; i < userdata.length; i++) {\r\n\t\tconst element = userdata[i];\r\n\t\tif(element.email==localStorage.getItem(\"email\")) {\r\n\t\t\t// localStorage.setItem(\"iscompletedbasicofblockchain\",JSON.stringify(userdata[i].basicsofblockchain))\r\n\t\t\t// localStorage.setItem(\"mila?\",\"yes\")\r\n\t  console.log(userdata[i].email\r\n\t\t)\r\n\t\tlocalStorage.setItem(\"userinfo\",JSON.stringify(userdata[i]))\r\n\t\tflag=flag+1;\r\n\t\tlocalStorage.setItem(\"userId\",userdata[i].id)\r\n\t\t}\r\n\r\n\t\t// const isComplete=JSON.parse(localStorage.getItem(\"iscompletedbasicofblockchain\"))\r\n\t\t// console.log(isComplete)\r\n\t\t\r\n\t  }\r\n\t  \r\n\t\r\n\t  if(flag==0)\r\n\t  {\r\n\t\tawait addDoc(usersCollectionRef, {\r\n\t\t\tname: localStorage.getItem(\"name\"),\r\n\t\t\temail: localStorage.getItem(\"email\"),\r\n\t\t\tbasicsofblockchain: [\"\"],basicprogramming: [\"\"],solidity:[\"\"],dsa:[\"\"],htmlcssjs:[\"\"],reactjs:[\"\"],reactjs:[\"\"]\r\n\t\t  });\r\n\t\t  \r\n\t\twindow.location.reload(true)\r\n\t\t\r\n\t  }\r\n\r\n\t  console.log(JSON.parse(localStorage.getItem('blockchain')))\r\n\r\n   \r\n    }\r\n\r\n\t\r\n      \r\n     \r\n    \r\n\r\n  \r\n   \r\n  }, [])\r\n  \r\n  async function requestAccount() {\r\n    console.log('Requesting account...');\r\n\r\n    // ❌ Check if Meta Mask Extension exists \r\n    if(window.ethereum) {\r\n      console.log('detected');\r\n\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        \r\n        localStorage.setItem('account',accounts[0].substring(0,4)+\"....\"+accounts[0].substring(38,42))\r\n        setAccount(accounts[0].substring(0,4)+\"....\"+accounts[0].substring(38,42));\r\n        setAccountShow(accounts[0])\r\n\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        const balanc=await provider.getBalance(accounts[0]);\r\n        setBalance(ethers.utils.formatEther(balanc))\r\n        \r\n        const signer = provider.getSigner();\r\n        const contractAddress = \"0xed003f0709Ec34c4e9B1DF990B928Fd029eD1681\";\r\n       \r\n        const contract = new ethers.Contract(contractAddress, abi, signer);\r\n        alert('hello')\r\n       \r\n        \r\n        // contract.modulesCompleted(accounts[0], 0, 0).then((data)=>{\r\n        //     alert(data);\r\n        //     console.log(data);\r\n        //     if(data==true)\r\n        //     {\r\n        //       localStorage.setItem(\"text\", 'Completed');\r\n        //       localStorage.setItem(\"color\", 'success');\r\n        //       window.location.reload(true)\r\n        //       // setMarkAsCompleteText('Completed');\r\n        //       // setMarkAsCompleteColor('success')\r\n        //     }\r\n           \r\n        // }).catch((err)=>{\r\n        //     alert(err);\r\n        //     console.log(err);\r\n        // })\r\n\r\n        // localStorage.setItem('C0M0','false')\r\n        // localStorage.setItem('C0M1','false')\r\n        // localStorage.setItem('C0M2','false')\r\n        // localStorage.setItem('C0M3','false')\r\n        // localStorage.setItem('C0M4','false')\r\n       \r\n        let courses=ethers.BigNumber.from(await contract.numberOfCourses()).toNumber()\r\n        console.log(courses)\r\n        alert(courses)\r\n        let user=[]\r\n\r\n        for(let i=0;i<courses;i++) {\r\n\r\n          let obj={}\r\n          \r\n          obj.id=i;\r\n          \r\n          let modules=ethers.BigNumber.from(await contract.numberOfModules(i)).toNumber()\r\n            alert(modules)\r\n          obj.numberOfModules=modules\r\n\r\n          obj.isModuleComplete={};\r\n\r\n\r\n          for(let j=0;j<modules;j++) {\r\n\r\n            let isComplete=await contract.modulesCompleted(accounts[0],i,j)\r\n            obj.isModuleComplete[`${j}`]=isComplete\r\n\r\n          }\r\n          user.push(obj)\r\n          for(let i=0;i<user.length;i++)\r\n          {\r\n            let flag=0;\r\n            for(let j=0;j<user[i].numberOfModules;j++)\r\n            {\r\n                if(user[i].isModuleComplete[`${j}`]==false)\r\n                {\r\n                    flag=1;\r\n                    break;\r\n                }\r\n            }\r\n            if(flag==0)\r\n            {\r\n                localStorage.setItem(`C${i}`,'true')\r\n            }\r\n            else\r\n            {\r\n                localStorage.setItem(`C${i}`,'false')\r\n            }\r\n\r\n          }\r\n          localStorage.setItem('user',JSON.stringify(user))\r\n\r\n          \r\n\t\t\r\n        }\r\n        \r\n        \r\n\r\n        \r\n\r\n\r\n      } catch (error) {\r\n        console.log('Error connecting...');\r\n      }\r\n\r\n    } else {\r\n      alert('Meta Mask not detected');\r\n    }\r\n  }\r\n\r\n  async function connectWallet() {\r\n    if(typeof window.ethereum !== 'undefined') {\r\n      await requestAccount();\r\n      const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      setAccount(accounts[0].substring(0,4)+\"....\"+accounts[0].substring(38,42));\r\n      setAccountShow(accounts[0])\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner();\r\n      const balanc=provider.getBalance(accountShow);\r\n      setBalance(ethers.utils.formatEther(balanc))\r\n      const contractAddress = \"0xed003f0709Ec34c4e9B1DF990B928Fd029eD1681\";\r\n       \r\n      const contract = new ethers.Contract(contractAddress, abi, signer);\r\n      alert('hello')\r\n     \r\n      \r\n\r\n\r\n      let courses=ethers.BigNumber.from(await contract.numberOfCourses()).toNumber()\r\n      console.log(courses)\r\n      alert(courses)\r\n      let user=[]\r\n\r\n      for(let i=0;i<courses;i++) {\r\n\r\n        let obj={}\r\n        \r\n        obj.id=i;\r\n        \r\n        let modules=ethers.BigNumber.from(await contract.numberOfModules(courses-1)).toNumber()\r\n\r\n        obj.numberOfModules=modules\r\n\r\n        obj.isModuleComplete={};\r\n\r\n\r\n        for(let j=0;j<modules;j++) {\r\n\r\n          let isComplete=await contract.modulesCompleted(accounts[0],i,j)\r\n          obj.isModuleComplete[`${j}`]=isComplete\r\n\r\n        }\r\n        user.push(obj)\r\n        \r\n\r\n        \r\n\r\n      }\r\n      localStorage.setItem('user',JSON.stringify(user))\r\n      window.location.reload(true)\r\n\r\n\r\n      \r\n    }\r\n    else{\r\n      setShow(true)\r\n      // window.open(\"https://metamask.io/download/\", '_blank');\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      \r\n\t  <div  class=\"cnav\">\r\n<div  data-aos=\"fade-up\" data-aos-once=\"false\" data-aos-duration=\"2000\" class=\"cnavpart1\">\r\n\t\r\n\r\n<img  class=\"clogo\" src={connectverse}/>\r\n\r\n\r\n</div>\r\n\t\r\n\t \r\n\r\n\t\r\n\t  <div class=\"cnavpart2\">\r\n\r\n\t  \r\n\t\t\r\n\t\t\r\n\t  <button  data-aos=\"fade-up\" data-aos-once=\"false\" data-aos-duration=\"2000\"   class=\"cbutton\" onClick={\r\n        \r\n\r\n        connectWallet}>{localStorage.getItem('account')?localStorage.getItem('account'):account}</button>\r\n       \r\n\t\t&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t\t\r\n          {loginImage==true?<div class=\"login\">\r\n    \r\n      \r\n      <img style={{height:'2.5em',width: '2.5em' ,borderRadius: '3em'}} src={loginButtonImage} alt=\"Circular Image\"/>\r\n</div>:<div><button  data-aos=\"fade-up\" data-aos-once=\"false\" data-aos-duration=\"2000\" class=\"cbutton\" onClick={signInWithGoogle}>\r\n        {loginButtonText}\r\n      </button></div>}\r\n\r\n\t  </div>\r\n\t  <div>\r\n\r\n\r\n\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n\t  </div>\r\n\t  </div>\r\n\t  \r\n\t  \r\n      \r\n    \r\n\r\n    \r\n    \r\n      {/* <div class=\"full-size-div\">hello</div> */}\r\n      {/* <HomePage/> */}\r\n      {/* <Switch>\r\n        <Route path=\"/course1\" component={Home} />\r\n        <Route path=\"/course2\" component={Home} />\r\n        <Route path=\"/course3\" component={Home} />\r\n      </Switch> */}\r\n      <Routes>\r\n      <Route path=\"/\" element={<HomePage />} />\r\n      <Route path=\"/courses\" element={<Courses />} />\r\n      <Route path=\"/devrel\" element={<DevRel />} />\r\n      <Route path=\"/course1\" element={<Course1 />} />\r\n      <Route path=\"/hello\" element={<Home />} />\r\n      <Route path=\"/Testing\" element={<Testing />} />\r\n      <Route path=\"/Testing2\" element={<Testing2 />} />\r\n      <Route path=\"/Testing3\" element={<Testing3 />} />\r\n\t  <Route path=\"/Testing4\" element={<Testing4 />} />\r\n\t  <Route path=\"/Testing5\" element={<Testing5 />} />\r\n\t  <Route path=\"/Testing6\" element={<Testing6 />} />\r\n\t  <Route path=\"/Testing7\" element={<Testing7 />} />\r\n\t  <Route path=\"/newhome\" element={<NewHome />} />\r\n\t  <Route path=\"/jobportal\" element={<JobPortal />} />\r\n      {/* <Route path=\"/player\" element={<Player />} />\r\n      <Route path=\"/About\" element={<Player />} /> */}\r\n    </Routes>\r\n\r\n      <br></br>\r\n      <br></br>\r\n    {/* <Navbar bg=\"black\" data-bs-theme=\"dark\" >\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\" style={{color:\"white\"}}>2023 @Connectverse PVT</Navbar.Brand>\r\n        <div style={{color:\"white\"}}>Privacy Policy</div>\r\n      \r\n        \r\n        <Nav className=\"me-auto\" style={{color:\"white\"}} >\r\n         \r\n          <Nav.Link href=\"#termsofuse\" style={{color:\"white\"}}>Terms of Use</Nav.Link>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar> */}\r\n    <center><footer style={{padding:\"15px\", color:\"#fff\",backgroundColor:\"#000\"}}> &copy; 2023 all rights reserved @connectverse &nbsp;<a href=\"https://twitter.com/ConnectVerse3?t=EOGd1-BbXxZ_4MQM3f6xMw&s=09\" class=\"fa fa-twitter\"></a> &nbsp; <a href=\"https://www.linkedin.com/company/connect-verse/\" class=\"fa fa-linkedin\"></a> &nbsp; <a href=\"https://youtube.com/@Connectversesp?si=e5-3ezzV6xFiCEND\" class=\"fa fa-youtube\"></a> </footer></center>\r\n    \r\n\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Wallet not connected</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n         Make sure that you have wallet installed on your browser\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n            window.open(\"https://metamask.io/download/\", '_blank');\r\n          }}>Install Wallet</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { MoralisProvider } from \"react-moralis\";\r\nimport { NotificationProvider } from 'web3uikit';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <MoralisProvider appId=\"xxxxx\" serverUrl=\"xxxxx\">\r\n      <NotificationProvider>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      </NotificationProvider>\r\n    </MoralisProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3eoH7\",\"typewriter-container\":\"Home_typewriter-container__3fLxc\",\"type\":\"Home_type__2Sza3\"};"],"sourceRoot":""}